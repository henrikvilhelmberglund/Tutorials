---
title: Multi command snippets in VSCode
author: henrikvilhelmberglund
authorlink: github.com/henrikvilhelmberglund/
date: 2022-10-05
layout: notes
---
# Multi command snippets in VSCode

#### (Note: I'm not using this for console logging right now but still useful as an example)
##### One key for adding a console.log(); for the line contents with the help of the extension multi-command

1. In extensions in the left side panel search for multi-command and install it
2. In the Command Palette (View - Command Palette... ) search for settings, select Open Settings (JSON) (not default!) and press enter
3. Add the following to the bottom (add a comma as well)
```json
"multiCommand.commands": [
        {
            "command": "multiCommand.createConsoleLog",
            "sequence": [
                "cursorHome",
                "cursorEndSelect",
                {   
                    "command": "editor.action.insertSnippet",
                    "args": {
                        // "snippet": "console.log(${TM_SELECTED_TEXT}$0);"
                    }
                },
                "leaveSnippet"

            ]
        }        
      ],
```
This multi command runs four commands:
 1. cursorHome (like pressing Home to jump to the start of the row)
 2. cursorEndSelect (like pressing shift+End for selecting everything to the right on the row)
 <!-- 3. editor.action.insertSnippet with the argument "console.log(${TM_SELECTED_TEXT}$0);" for adding a console.log with the contents of the row and setting the cursor location to $0 which is inside the () -->
 4. leaveSnippet for leaving the snippet to get back the intellisense suggestions. Usually these are disabled in snippets for not autocompleting by accident when using tab to jump between the parameters. Also in this case leaveSnippet isn't really necessary because we're using $0 and not $1 but this could be useful in other cases.
 5. In the Command Palette (View - Command Palette... ) search for keyboard, then Open Keyboard Shortcuts (JSON) (not default!) and press enter
 6. Add the following to the bottom and a comma

```json
{
        "key": "ctrl+l",
        "command": "multiCommand.createConsoleLog",
        "when": "editorLangId == javascript && editorTextFocus",
    },
```
 7. Change "key": if necessary by opening Edit - Preferences - Keyboard Shortcuts, search for ctrl+l and remove the conflicting key, or just pick another key
 8. In a .js-file press ctrl+l (or whichever key you chose) to add a console.log();
 You can also just run it on a row to wrap everything on that row in a console.log();
 9. Success!

Tip:  you can add more multicommands, just add the command name and the commands you would like to use in your settings.json file, also "key",  "command" and "when" in keybindings.json
More info on snippets https://code.visualstudio.com/docs/editor/userdefinedsnippets