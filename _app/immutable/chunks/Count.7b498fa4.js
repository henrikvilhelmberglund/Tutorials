var C=Object.freeze,G=Object.defineProperty;var y=(o,t)=>C(G(o,"raw",{value:C(t||o.slice())}));import{s as O,f as b,a as j,l as g,g as v,u as T,c as E,m as $,i,X as H,n as S,z as h,d as u,H as J,h as K,r as U,w as D,x as I,y as V,Y as L,e as q,Z as M}from"./scheduler.a7cd560e.js";import{S as W,i as X,b as Y,d as Z,m as A,a as _,t as m,e as F}from"./index.396264e7.js";import{E as P}from"./Example.e02fc6c1.js";function Q(o){let t,e="-",a,n,s,c=o[0]*2+"",f,k,r,x="+",d,w;return{c(){t=b("button"),t.textContent=e,a=j(),n=g(o[0]),s=g(" * 2 = "),f=g(c),k=j(),r=b("button"),r.textContent=x},l(p){t=v(p,"BUTTON",{["data-svelte-h"]:!0}),T(t)!=="svelte-1uw3qz6"&&(t.textContent=e),a=E(p),n=$(p,o[0]),s=$(p," * 2 = "),f=$(p,c),k=E(p),r=v(p,"BUTTON",{["data-svelte-h"]:!0}),T(r)!=="svelte-g3ld9c"&&(r.textContent=x)},m(p,l){i(p,t,l),i(p,a,l),i(p,n,l),i(p,s,l),i(p,f,l),i(p,k,l),i(p,r,l),d||(w=[H(t,"click",o[2]),H(r,"click",o[1])],d=!0)},p(p,[l]){l&1&&S(n,p[0]),l&1&&c!==(c=p[0]*2+"")&&S(f,c)},i:h,o:h,d(p){p&&(u(t),u(a),u(n),u(s),u(f),u(k),u(r)),d=!1,J(w)}}}function R(o,t,e){let a=1;function n(){e(0,a++,a)}function s(){e(0,a--,a)}return[a,n,s]}class nn extends W{constructor(t){super(),X(this,t,R,Q,O,{})}}const tn=o=>({}),z=o=>({slot:"example"}),sn=o=>({}),B=o=>({slot:"code"});function an(o){let t,e;return t=new nn({}),{c(){Y(t.$$.fragment)},l(a){Z(t.$$.fragment,a)},m(a,n){A(t,a,n),e=!0},i(a){e||(_(t.$$.fragment,a),e=!0)},o(a){m(t.$$.fragment,a),e=!1},d(a){F(t,a)}}}function en(o){let t;const e=o[0].default,a=U(e,o,o[1],z),n=a||an();return{c(){n&&n.c()},l(s){n&&n.l(s)},m(s,c){n&&n.m(s,c),t=!0},p(s,c){a&&a.p&&(!t||c&2)&&D(a,e,s,s[1],t?V(e,s[1],c,tn):I(s[1]),z)},i(s){t||(_(n,s),t=!0)},o(s){m(n,s),t=!1},d(s){n&&n.d(s)}}}function on(o){let t,e=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>decrement<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token language-javascript"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span> * 2 = <span class="token language-javascript"><span class="token punctuation">{</span>count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">}</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>increment<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>`,a;return{c(){t=new L(!1),a=q(),this.h()},l(n){t=M(n,!1),a=q(),this.h()},h(){t.a=a},m(n,s){t.m(e,n,s),i(n,a,s)},p:h,d(n){n&&(u(a),t.d())}}}function pn(o){let t;const e=o[0].default,a=U(e,o,o[1],B),n=a||on();return{c(){n&&n.c()},l(s){n&&n.l(s)},m(s,c){n&&n.m(s,c),t=!0},p(s,c){a&&a.p&&(!t||c&2)&&D(a,e,s,s[1],t?V(e,s[1],c,sn):I(s[1]),B)},i(s){t||(_(n,s),t=!0)},o(s){m(n,s),t=!1},d(s){n&&n.d(s)}}}var N;function cn(o){let t,e,a;return e=new P({props:{src:String.raw(N||(N=y([`<script>
let count = 1;
function increment() {
count++;
}
function decrement() {
count--;
}
<\/script>
<button on:click={decrement}>-</button>
{count} * 2 = {count * 2}
<button on:click={increment}>+</button>`]))),meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[pn],example:[en]},$$scope:{ctx:o}}}),{c(){t=b("div"),Y(e.$$.fragment)},l(n){t=v(n,"DIV",{});var s=K(t);Z(e.$$.fragment,s),s.forEach(u)},m(n,s){i(n,t,s),A(e,t,null),a=!0},p(n,[s]){const c={};s&2&&(c.$$scope={dirty:s,ctx:n}),e.$set(c)},i(n){a||(_(e.$$.fragment,n),a=!0)},o(n){m(e.$$.fragment,n),a=!1},d(n){n&&u(t),F(e)}}}function ln(o,t,e){let{$$slots:a={},$$scope:n}=t;return o.$$set=s=>{"$$scope"in s&&e(1,n=s.$$scope)},[a,n]}class _n extends W{constructor(t){super(),X(this,t,ln,cn,O,{})}}export{_n as default};
