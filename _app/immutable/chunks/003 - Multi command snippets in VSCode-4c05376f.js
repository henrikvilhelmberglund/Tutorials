import{S as Ke,i as qe,s as Re,k as a,q as p,a as r,l as o,m as l,r as c,h as t,c as u,n as N,b as i,H as s,B as ve}from"./index-032954cb.js";function Ue(Ae){let k,F,$,_,X,J,E,z,K,h,j,G,Q,C,W,Z,L,ee,q,y,Ve=`<code class="language-json"><span class="token property">"multiCommand.commands"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">&#123;</span>
            <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"multiCommand.createConsoleLog"</span><span class="token punctuation">,</span>
            <span class="token property">"sequence"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">"cursorHome"</span><span class="token punctuation">,</span>
                <span class="token string">"cursorEndSelect"</span><span class="token punctuation">,</span>
                <span class="token punctuation">&#123;</span>   
                    <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"editor.action.insertSnippet"</span><span class="token punctuation">,</span>
                    <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                        <span class="token comment">// "snippet": "console.log($&#123;TM_SELECTED_TEXT&#125;$0);"</span>
                    <span class="token punctuation">&#125;</span>
                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                <span class="token string">"leaveSnippet"</span>

            <span class="token punctuation">]</span>
        <span class="token punctuation">&#125;</span>        
      <span class="token punctuation">]</span><span class="token punctuation">,</span></code>`,R,b,te,U,d,P,se,ne,O,ae,oe,x,le,ie,H,pe,re,T,ce,Y,g,Ne=`<code class="language-json"><span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+l"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"multiCommand.createConsoleLog"</span><span class="token punctuation">,</span>
        <span class="token property">"when"</span><span class="token operator">:</span> <span class="token string">"editorLangId == javascript &amp;&amp; editorTextFocus"</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`,B,m,M,ue,de,A,me,he,V,fe,D,v,ke,w,ye;return{c(){k=a("h1"),F=p("Multi command snippets in VSCode"),$=r(),_=a("h4"),X=p("(Note: I\u2019m not using this for console logging right now but still useful as an example)"),J=r(),E=a("h5"),z=p("One key for adding a console.log(); for the line contents with the help of the extension multi-command"),K=r(),h=a("ol"),j=a("li"),G=p("In extensions in the left side panel search for multi-command and install it"),Q=r(),C=a("li"),W=p("In the Command Palette (View - Command Palette\u2026 ) search for settings, select Open Settings (JSON) (not default!) and press enter"),Z=r(),L=a("li"),ee=p("Add the following to the bottom (add a comma as well)"),q=r(),y=a("pre"),R=r(),b=a("p"),te=p("This multi command runs four commands:"),U=r(),d=a("ol"),P=a("li"),se=p("cursorHome (like pressing Home to jump to the start of the row)"),ne=r(),O=a("li"),ae=p("cursorEndSelect (like pressing shift+End for selecting everything to the right on the row)"),oe=r(),x=a("li"),le=p("leaveSnippet for leaving the snippet to get back the intellisense suggestions. Usually these are disabled in snippets for not autocompleting by accident when using tab to jump between the parameters. Also in this case leaveSnippet isn\u2019t really necessary because we\u2019re using $0 and not $1 but this could be useful in other cases."),ie=r(),H=a("li"),pe=p("In the Command Palette (View - Command Palette\u2026 ) search for keyboard, then Open Keyboard Shortcuts (JSON) (not default!) and press enter"),re=r(),T=a("li"),ce=p("Add the following to the bottom and a comma"),Y=r(),g=a("pre"),B=r(),m=a("ol"),M=a("li"),ue=p("Change \u201Ckey\u201D: if necessary by opening Edit - Preferences - Keyboard Shortcuts, search for ctrl+l and remove the conflicting key, or just pick another key"),de=r(),A=a("li"),me=p(`In a .js-file press ctrl+l (or whichever key you chose) to add a console.log();
You can also just run it on a row to wrap everything on that row in a console.log();`),he=r(),V=a("li"),fe=p("Success!"),D=r(),v=a("p"),ke=p(`Tip:  you can add more multicommands, just add the command name and the commands you would like to use in your settings.json file, also \u201Ckey\u201D,  \u201Ccommand\u201D and \u201Cwhen\u201D in keybindings.json
More info on snippets `),w=a("a"),ye=p("https://code.visualstudio.com/docs/editor/userdefinedsnippets"),this.h()},l(e){k=o(e,"H1",{});var n=l(k);F=c(n,"Multi command snippets in VSCode"),n.forEach(t),$=u(e),_=o(e,"H4",{});var we=l(_);X=c(we,"(Note: I\u2019m not using this for console logging right now but still useful as an example)"),we.forEach(t),J=u(e),E=o(e,"H5",{});var _e=l(E);z=c(_e,"One key for adding a console.log(); for the line contents with the help of the extension multi-command"),_e.forEach(t),K=u(e),h=o(e,"OL",{});var S=l(h);j=o(S,"LI",{});var Ee=l(j);G=c(Ee,"In extensions in the left side panel search for multi-command and install it"),Ee.forEach(t),Q=u(S),C=o(S,"LI",{});var be=l(C);W=c(be,"In the Command Palette (View - Command Palette\u2026 ) search for settings, select Open Settings (JSON) (not default!) and press enter"),be.forEach(t),Z=u(S),L=o(S,"LI",{});var Se=l(L);ee=c(Se,"Add the following to the bottom (add a comma as well)"),Se.forEach(t),S.forEach(t),q=u(e),y=o(e,"PRE",{class:!0});var $e=l(y);$e.forEach(t),R=u(e),b=o(e,"P",{});var Ie=l(b);te=c(Ie,"This multi command runs four commands:"),Ie.forEach(t),U=u(e),d=o(e,"OL",{});var f=l(d);P=o(f,"LI",{});var je=l(P);se=c(je,"cursorHome (like pressing Home to jump to the start of the row)"),je.forEach(t),ne=u(f),O=o(f,"LI",{});var Ce=l(O);ae=c(Ce,"cursorEndSelect (like pressing shift+End for selecting everything to the right on the row)"),Ce.forEach(t),oe=u(f),x=o(f,"LI",{});var Le=l(x);le=c(Le,"leaveSnippet for leaving the snippet to get back the intellisense suggestions. Usually these are disabled in snippets for not autocompleting by accident when using tab to jump between the parameters. Also in this case leaveSnippet isn\u2019t really necessary because we\u2019re using $0 and not $1 but this could be useful in other cases."),Le.forEach(t),ie=u(f),H=o(f,"LI",{});var Pe=l(H);pe=c(Pe,"In the Command Palette (View - Command Palette\u2026 ) search for keyboard, then Open Keyboard Shortcuts (JSON) (not default!) and press enter"),Pe.forEach(t),re=u(f),T=o(f,"LI",{});var Oe=l(T);ce=c(Oe,"Add the following to the bottom and a comma"),Oe.forEach(t),f.forEach(t),Y=u(e),g=o(e,"PRE",{class:!0});var Je=l(g);Je.forEach(t),B=u(e),m=o(e,"OL",{start:!0});var I=l(m);M=o(I,"LI",{});var xe=l(M);ue=c(xe,"Change \u201Ckey\u201D: if necessary by opening Edit - Preferences - Keyboard Shortcuts, search for ctrl+l and remove the conflicting key, or just pick another key"),xe.forEach(t),de=u(I),A=o(I,"LI",{});var He=l(A);me=c(He,`In a .js-file press ctrl+l (or whichever key you chose) to add a console.log();
You can also just run it on a row to wrap everything on that row in a console.log();`),He.forEach(t),he=u(I),V=o(I,"LI",{});var Te=l(V);fe=c(Te,"Success!"),Te.forEach(t),I.forEach(t),D=u(e),v=o(e,"P",{});var ge=l(v);ke=c(ge,`Tip:  you can add more multicommands, just add the command name and the commands you would like to use in your settings.json file, also \u201Ckey\u201D,  \u201Ccommand\u201D and \u201Cwhen\u201D in keybindings.json
More info on snippets `),w=o(ge,"A",{href:!0,rel:!0});var Me=l(w);ye=c(Me,"https://code.visualstudio.com/docs/editor/userdefinedsnippets"),Me.forEach(t),ge.forEach(t),this.h()},h(){N(y,"class","language-json"),N(g,"class","language-json"),N(m,"start","7"),N(w,"href","https://code.visualstudio.com/docs/editor/userdefinedsnippets"),N(w,"rel","nofollow")},m(e,n){i(e,k,n),s(k,F),i(e,$,n),i(e,_,n),s(_,X),i(e,J,n),i(e,E,n),s(E,z),i(e,K,n),i(e,h,n),s(h,j),s(j,G),s(h,Q),s(h,C),s(C,W),s(h,Z),s(h,L),s(L,ee),i(e,q,n),i(e,y,n),y.innerHTML=Ve,i(e,R,n),i(e,b,n),s(b,te),i(e,U,n),i(e,d,n),s(d,P),s(P,se),s(d,ne),s(d,O),s(O,ae),s(d,oe),s(d,x),s(x,le),s(d,ie),s(d,H),s(H,pe),s(d,re),s(d,T),s(T,ce),i(e,Y,n),i(e,g,n),g.innerHTML=Ne,i(e,B,n),i(e,m,n),s(m,M),s(M,ue),s(m,de),s(m,A),s(A,me),s(m,he),s(m,V),s(V,fe),i(e,D,n),i(e,v,n),s(v,ke),s(v,w),s(w,ye)},p:ve,i:ve,o:ve,d(e){e&&t(k),e&&t($),e&&t(_),e&&t(J),e&&t(E),e&&t(K),e&&t(h),e&&t(q),e&&t(y),e&&t(R),e&&t(b),e&&t(U),e&&t(d),e&&t(Y),e&&t(g),e&&t(B),e&&t(m),e&&t(D),e&&t(v)}}}class Be extends Ke{constructor(k){super(),qe(this,k,null,Ue,Re,{})}}export{Be as default};
