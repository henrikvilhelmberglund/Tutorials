var v=Object.freeze,Y=Object.defineProperty;var j=(o,s)=>v(Y(o,"raw",{value:v(s||o.slice())}));import{s as D,f,l as Z,a as x,g as _,h as E,m as A,d as i,c as y,u as O,i as r,v as F,X as w,n as G,z as b,H as J,r as H,w as M,x as S,y as q,Y as K,e as T,Z as L}from"./scheduler.a7cd560e.js";import{S as z,i as I,b as N,d as U,m as V,a as m,t as d,e as X}from"./index.396264e7.js";import{E as P}from"./Example.e02fc6c1.js";function Q(o){let s,e=o[0].count+"",a,t,n,p="This does not update the DOM",k,u,h="But this will trigger the update (assigned in the function)",g,$;return{c(){s=f("div"),a=Z(e),t=x(),n=f("button"),n.textContent=p,k=x(),u=f("button"),u.textContent=h},l(c){s=_(c,"DIV",{});var l=E(s);a=A(l,e),l.forEach(i),t=y(c),n=_(c,"BUTTON",{["data-svelte-h"]:!0}),O(n)!=="svelte-1lm0xjb"&&(n.textContent=p),k=y(c),u=_(c,"BUTTON",{["data-svelte-h"]:!0}),O(u)!=="svelte-16qzvg0"&&(u.textContent=h)},m(c,l){r(c,s,l),F(s,a),r(c,t,l),r(c,n,l),r(c,k,l),r(c,u,l),g||($=[w(n,"click",o[3]),w(u,"click",o[4])],g=!0)},p(c,[l]){l&1&&e!==(e=c[0].count+"")&&G(a,e)},i:b,o:b,d(c){c&&(i(s),i(t),i(n),i(k),i(u)),g=!1,J($)}}}function R(o,s,e){let a={count:0},t=a;function n(){t.count++}function p(){e(0,a.foo=1,a)}return[a,n,p,()=>n(),()=>p()]}class nn extends z{constructor(s){super(),I(this,s,R,Q,D,{})}}const tn=o=>({}),C=o=>({slot:"example"}),sn=o=>({}),W=o=>({slot:"code"});function an(o){let s,e;return s=new nn({}),{c(){N(s.$$.fragment)},l(a){U(s.$$.fragment,a)},m(a,t){V(s,a,t),e=!0},i(a){e||(m(s.$$.fragment,a),e=!0)},o(a){d(s.$$.fragment,a),e=!1},d(a){X(s,a)}}}function en(o){let s;const e=o[0].default,a=H(e,o,o[1],C),t=a||an();return{c(){t&&t.c()},l(n){t&&t.l(n)},m(n,p){t&&t.m(n,p),s=!0},p(n,p){a&&a.p&&(!s||p&2)&&M(a,e,n,n[1],s?q(e,n[1],p,tn):S(n[1]),C)},i(n){s||(m(t,n),s=!0)},o(n){d(t,n),s=!1},d(n){t&&t.d(n)}}}function on(o){let s,e=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> myObj <span class="token operator">=</span> obj<span class="token punctuation">;</span>
  
  <span class="token keyword">function</span> <span class="token function">incrementWrong</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    myObj<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">assignToObj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">{</span>obj<span class="token punctuation">.</span>count<span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token function">incrementWrong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>This does not update the DOM<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token function">assignToObj</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>But this will trigger the update (assigned in the function)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>`,a;return{c(){s=new K(!1),a=T(),this.h()},l(t){s=L(t,!1),a=T(),this.h()},h(){s.a=a},m(t,n){s.m(e,t,n),r(t,a,n)},p:b,d(t){t&&(i(a),s.d())}}}function pn(o){let s;const e=o[0].default,a=H(e,o,o[1],W),t=a||on();return{c(){t&&t.c()},l(n){t&&t.l(n)},m(n,p){t&&t.m(n,p),s=!0},p(n,p){a&&a.p&&(!s||p&2)&&M(a,e,n,n[1],s?q(e,n[1],p,sn):S(n[1]),W)},i(n){s||(m(t,n),s=!0)},o(n){d(t,n),s=!1},d(n){t&&t.d(n)}}}var B;function cn(o){let s,e,a;return e=new P({props:{src:String.raw(B||(B=j([`<script>
let obj = {
count: 0
};
let myObj = obj;

function incrementWrong() {
myObj.count++;
}
function assignToObj() {
obj.foo = 1;
}
<\/script>
<div>{obj.count}</div>
<button on:click={()=>incrementWrong()}>This does not update the DOM</button>
<button on:click={()=>assignToObj()}>But this will trigger the update (assigned in the function)</button>`]))),meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[pn],example:[en]},$$scope:{ctx:o}}}),{c(){s=f("div"),N(e.$$.fragment)},l(t){s=_(t,"DIV",{});var n=E(s);U(e.$$.fragment,n),n.forEach(i)},m(t,n){r(t,s,n),V(e,s,null),a=!0},p(t,[n]){const p={};n&2&&(p.$$scope={dirty:n,ctx:t}),e.$set(p)},i(t){a||(m(e.$$.fragment,t),a=!0)},o(t){d(e.$$.fragment,t),a=!1},d(t){t&&i(s),X(e)}}}function ln(o,s,e){let{$$slots:a={},$$scope:t}=s;return o.$$set=n=>{"$$scope"in n&&e(1,t=n.$$scope)},[a,t]}class _n extends z{constructor(s){super(),I(this,s,ln,cn,D,{})}}export{_n as default};
