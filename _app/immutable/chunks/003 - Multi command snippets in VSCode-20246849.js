import{S as Oe,i as Pe,s as Le,J as ie,w as i,x as u,y as m,K as Me,L as Se,f as $,t as f,z as d,M as ye,a as _,k as R,c as g,l as U,m as Y,h as l,n as ce,b as r,D as q,q as h,r as k}from"./index-2796fafe.js";import{M as Te,P as je,A as Ie}from"./mdsvex-layout-notes-43f3bd51.js";import{H as Ve,L as j}from"./Li-5b575f63.js";import{H as Ae}from"./H4-48030b74.js";import{H as Ne}from"./H5-040f0b53.js";function Je(a){let t;return{c(){t=h("Multi command snippets in VSCode")},l(e){t=k(e,"Multi command snippets in VSCode")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function Ke(a){let t;return{c(){t=h("(Note: I'm not using this for console logging right now but still useful as an example)")},l(e){t=k(e,"(Note: I'm not using this for console logging right now but still useful as an example)")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function qe(a){let t;return{c(){t=h("One key for adding a console.log(); for the line contents with the help of the extension multi-command")},l(e){t=k(e,"One key for adding a console.log(); for the line contents with the help of the extension multi-command")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function xe(a){let t;return{c(){t=h("In extensions in the left side panel search for multi-command and install it")},l(e){t=k(e,"In extensions in the left side panel search for multi-command and install it")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function De(a){let t;return{c(){t=h("In the Command Palette (View - Command Palette… ) search for settings, select Open Settings (JSON) (not default!) and press enter")},l(e){t=k(e,"In the Command Palette (View - Command Palette… ) search for settings, select Open Settings (JSON) (not default!) and press enter")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function Re(a){let t;return{c(){t=h("Add the following to the bottom (add a comma as well)")},l(e){t=k(e,"Add the following to the bottom (add a comma as well)")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function Ue(a){let t;return{c(){t=h("This multi command runs four commands:")},l(e){t=k(e,"This multi command runs four commands:")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function Ye(a){let t;return{c(){t=h("cursorHome (like pressing Home to jump to the start of the row)")},l(e){t=k(e,"cursorHome (like pressing Home to jump to the start of the row)")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function ze(a){let t;return{c(){t=h("cursorEndSelect (like pressing shift+End for selecting everything to the right on the row)")},l(e){t=k(e,"cursorEndSelect (like pressing shift+End for selecting everything to the right on the row)")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function Fe(a){let t;return{c(){t=h("leaveSnippet for leaving the snippet to get back the intellisense suggestions. Usually these are disabled in snippets for not autocompleting by accident when using tab to jump between the parameters. Also in this case leaveSnippet isn't really necessary because we're using $0 and not $1 but this could be useful in other cases.")},l(e){t=k(e,"leaveSnippet for leaving the snippet to get back the intellisense suggestions. Usually these are disabled in snippets for not autocompleting by accident when using tab to jump between the parameters. Also in this case leaveSnippet isn't really necessary because we're using $0 and not $1 but this could be useful in other cases.")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function Xe(a){let t;return{c(){t=h("In the Command Palette (View - Command Palette… ) search for keyboard, then Open Keyboard Shortcuts (JSON) (not default!) and press enter")},l(e){t=k(e,"In the Command Palette (View - Command Palette… ) search for keyboard, then Open Keyboard Shortcuts (JSON) (not default!) and press enter")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function Ze(a){let t;return{c(){t=h("Add the following to the bottom and a comma")},l(e){t=k(e,"Add the following to the bottom and a comma")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function Be(a){let t;return{c(){t=h('Change "key": if necessary by opening Edit - Preferences - Keyboard Shortcuts, search for ctrl+l and remove the conflicting key, or just pick another key')},l(e){t=k(e,'Change "key": if necessary by opening Edit - Preferences - Keyboard Shortcuts, search for ctrl+l and remove the conflicting key, or just pick another key')},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function Ge(a){let t;return{c(){t=h(`In a .js-file press ctrl+l (or whichever key you chose) to add a console.log();
You can also just run it on a row to wrap everything on that row in a console.log();`)},l(e){t=k(e,`In a .js-file press ctrl+l (or whichever key you chose) to add a console.log();
You can also just run it on a row to wrap everything on that row in a console.log();`)},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function Qe(a){let t;return{c(){t=h("Success!")},l(e){t=k(e,"Success!")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function We(a){let t;return{c(){t=h("https://code.visualstudio.com/docs/editor/userdefinedsnippets")},l(e){t=k(e,"https://code.visualstudio.com/docs/editor/userdefinedsnippets")},m(e,o){r(e,t,o)},d(e){e&&l(t)}}}function et(a){let t,e,o;return e=new Ie({props:{href:"https://code.visualstudio.com/docs/editor/userdefinedsnippets",rel:"nofollow",$$slots:{default:[We]},$$scope:{ctx:a}}}),{c(){t=h(`Tip:  you can add more multicommands, just add the command name and the commands you would like to use in your settings.json file, also "key",  "command" and "when" in keybindings.json
More info on snippets `),i(e.$$.fragment)},l(c){t=k(c,`Tip:  you can add more multicommands, just add the command name and the commands you would like to use in your settings.json file, also "key",  "command" and "when" in keybindings.json
More info on snippets `),u(e.$$.fragment,c)},m(c,p){r(c,t,p),m(e,c,p),o=!0},p(c,p){const w={};p&2&&(w.$$scope={dirty:p,ctx:c}),e.$set(w)},i(c){o||($(e.$$.fragment,c),o=!0)},o(c){f(e.$$.fragment,c),o=!1},d(c){c&&l(t),d(e,c)}}}function tt(a){let t,e,o,c,p,w,v,E,te,H,ne,O,z,x,Ee=`<code class="language-json"><span class="token property">"multiCommand.commands"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">&#123;</span>
            <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"multiCommand.createConsoleLog"</span><span class="token punctuation">,</span>
            <span class="token property">"sequence"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">"cursorHome"</span><span class="token punctuation">,</span>
                <span class="token string">"cursorEndSelect"</span><span class="token punctuation">,</span>
                <span class="token punctuation">&#123;</span>   
                    <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"editor.action.insertSnippet"</span><span class="token punctuation">,</span>
                    <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                        <span class="token comment">// "snippet": "console.log($&#123;TM_SELECTED_TEXT&#125;$0);"</span>
                    <span class="token punctuation">&#125;</span>
                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                <span class="token string">"leaveSnippet"</span>

            <span class="token punctuation">]</span>
        <span class="token punctuation">&#125;</span>        
      <span class="token punctuation">]</span><span class="token punctuation">,</span></code>`,F,P,X,b,L,se,M,oe,T,ae,I,le,V,Z,D,He=`<code class="language-json"><span class="token punctuation">&#123;</span>
        <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"ctrl+l"</span><span class="token punctuation">,</span>
        <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"multiCommand.createConsoleLog"</span><span class="token punctuation">,</span>
        <span class="token property">"when"</span><span class="token operator">:</span> <span class="token string">"editorLangId == javascript &amp;&amp; editorTextFocus"</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code>`,B,y,A,pe,N,re,J,G,K,Q;return t=new Ve({props:{$$slots:{default:[Je]},$$scope:{ctx:a}}}),o=new Ae({props:{$$slots:{default:[Ke]},$$scope:{ctx:a}}}),p=new Ne({props:{$$slots:{default:[qe]},$$scope:{ctx:a}}}),E=new j({props:{$$slots:{default:[xe]},$$scope:{ctx:a}}}),H=new j({props:{$$slots:{default:[De]},$$scope:{ctx:a}}}),O=new j({props:{$$slots:{default:[Re]},$$scope:{ctx:a}}}),P=new je({props:{$$slots:{default:[Ue]},$$scope:{ctx:a}}}),L=new j({props:{$$slots:{default:[Ye]},$$scope:{ctx:a}}}),M=new j({props:{$$slots:{default:[ze]},$$scope:{ctx:a}}}),T=new j({props:{$$slots:{default:[Fe]},$$scope:{ctx:a}}}),I=new j({props:{$$slots:{default:[Xe]},$$scope:{ctx:a}}}),V=new j({props:{$$slots:{default:[Ze]},$$scope:{ctx:a}}}),A=new j({props:{$$slots:{default:[Be]},$$scope:{ctx:a}}}),N=new j({props:{$$slots:{default:[Ge]},$$scope:{ctx:a}}}),J=new j({props:{$$slots:{default:[Qe]},$$scope:{ctx:a}}}),K=new je({props:{$$slots:{default:[et]},$$scope:{ctx:a}}}),{c(){i(t.$$.fragment),e=_(),i(o.$$.fragment),c=_(),i(p.$$.fragment),w=_(),v=R("ol"),i(E.$$.fragment),te=_(),i(H.$$.fragment),ne=_(),i(O.$$.fragment),z=_(),x=R("pre"),F=_(),i(P.$$.fragment),X=_(),b=R("ol"),i(L.$$.fragment),se=_(),i(M.$$.fragment),oe=_(),i(T.$$.fragment),ae=_(),i(I.$$.fragment),le=_(),i(V.$$.fragment),Z=_(),D=R("pre"),B=_(),y=R("ol"),i(A.$$.fragment),pe=_(),i(N.$$.fragment),re=_(),i(J.$$.fragment),G=_(),i(K.$$.fragment),this.h()},l(n){u(t.$$.fragment,n),e=g(n),u(o.$$.fragment,n),c=g(n),u(p.$$.fragment,n),w=g(n),v=U(n,"OL",{});var s=Y(v);u(E.$$.fragment,s),te=g(s),u(H.$$.fragment,s),ne=g(s),u(O.$$.fragment,s),s.forEach(l),z=g(n),x=U(n,"PRE",{class:!0});var W=Y(x);W.forEach(l),F=g(n),u(P.$$.fragment,n),X=g(n),b=U(n,"OL",{});var S=Y(b);u(L.$$.fragment,S),se=g(S),u(M.$$.fragment,S),oe=g(S),u(T.$$.fragment,S),ae=g(S),u(I.$$.fragment,S),le=g(S),u(V.$$.fragment,S),S.forEach(l),Z=g(n),D=U(n,"PRE",{class:!0});var ee=Y(D);ee.forEach(l),B=g(n),y=U(n,"OL",{start:!0});var C=Y(y);u(A.$$.fragment,C),pe=g(C),u(N.$$.fragment,C),re=g(C),u(J.$$.fragment,C),C.forEach(l),G=g(n),u(K.$$.fragment,n),this.h()},h(){ce(x,"class","language-json"),ce(D,"class","language-json"),ce(y,"start","7")},m(n,s){m(t,n,s),r(n,e,s),m(o,n,s),r(n,c,s),m(p,n,s),r(n,w,s),r(n,v,s),m(E,v,null),q(v,te),m(H,v,null),q(v,ne),m(O,v,null),r(n,z,s),r(n,x,s),x.innerHTML=Ee,r(n,F,s),m(P,n,s),r(n,X,s),r(n,b,s),m(L,b,null),q(b,se),m(M,b,null),q(b,oe),m(T,b,null),q(b,ae),m(I,b,null),q(b,le),m(V,b,null),r(n,Z,s),r(n,D,s),D.innerHTML=He,r(n,B,s),r(n,y,s),m(A,y,null),q(y,pe),m(N,y,null),q(y,re),m(J,y,null),r(n,G,s),m(K,n,s),Q=!0},p(n,s){const W={};s&2&&(W.$$scope={dirty:s,ctx:n}),t.$set(W);const S={};s&2&&(S.$$scope={dirty:s,ctx:n}),o.$set(S);const ee={};s&2&&(ee.$$scope={dirty:s,ctx:n}),p.$set(ee);const C={};s&2&&(C.$$scope={dirty:s,ctx:n}),E.$set(C);const ue={};s&2&&(ue.$$scope={dirty:s,ctx:n}),H.$set(ue);const me={};s&2&&(me.$$scope={dirty:s,ctx:n}),O.$set(me);const $e={};s&2&&($e.$$scope={dirty:s,ctx:n}),P.$set($e);const fe={};s&2&&(fe.$$scope={dirty:s,ctx:n}),L.$set(fe);const de={};s&2&&(de.$$scope={dirty:s,ctx:n}),M.$set(de);const _e={};s&2&&(_e.$$scope={dirty:s,ctx:n}),T.$set(_e);const ge={};s&2&&(ge.$$scope={dirty:s,ctx:n}),I.$set(ge);const he={};s&2&&(he.$$scope={dirty:s,ctx:n}),V.$set(he);const ke={};s&2&&(ke.$$scope={dirty:s,ctx:n}),A.$set(ke);const we={};s&2&&(we.$$scope={dirty:s,ctx:n}),N.$set(we);const be={};s&2&&(be.$$scope={dirty:s,ctx:n}),J.$set(be);const ve={};s&2&&(ve.$$scope={dirty:s,ctx:n}),K.$set(ve)},i(n){Q||($(t.$$.fragment,n),$(o.$$.fragment,n),$(p.$$.fragment,n),$(E.$$.fragment,n),$(H.$$.fragment,n),$(O.$$.fragment,n),$(P.$$.fragment,n),$(L.$$.fragment,n),$(M.$$.fragment,n),$(T.$$.fragment,n),$(I.$$.fragment,n),$(V.$$.fragment,n),$(A.$$.fragment,n),$(N.$$.fragment,n),$(J.$$.fragment,n),$(K.$$.fragment,n),Q=!0)},o(n){f(t.$$.fragment,n),f(o.$$.fragment,n),f(p.$$.fragment,n),f(E.$$.fragment,n),f(H.$$.fragment,n),f(O.$$.fragment,n),f(P.$$.fragment,n),f(L.$$.fragment,n),f(M.$$.fragment,n),f(T.$$.fragment,n),f(I.$$.fragment,n),f(V.$$.fragment,n),f(A.$$.fragment,n),f(N.$$.fragment,n),f(J.$$.fragment,n),f(K.$$.fragment,n),Q=!1},d(n){d(t,n),n&&l(e),d(o,n),n&&l(c),d(p,n),n&&l(w),n&&l(v),d(E),d(H),d(O),n&&l(z),n&&l(x),n&&l(F),d(P,n),n&&l(X),n&&l(b),d(L),d(M),d(T),d(I),d(V),n&&l(Z),n&&l(D),n&&l(B),n&&l(y),d(A),d(N),d(J),n&&l(G),d(K,n)}}}function nt(a){let t,e;const o=[a[0],Ce];let c={$$slots:{default:[tt]},$$scope:{ctx:a}};for(let p=0;p<o.length;p+=1)c=ie(c,o[p]);return t=new Te({props:c}),{c(){i(t.$$.fragment)},l(p){u(t.$$.fragment,p)},m(p,w){m(t,p,w),e=!0},p(p,[w]){const v=w&1?Me(o,[w&1&&Se(p[0]),w&0&&Se(Ce)]):{};w&2&&(v.$$scope={dirty:w,ctx:p}),t.$set(v)},i(p){e||($(t.$$.fragment,p),e=!0)},o(p){f(t.$$.fragment,p),e=!1},d(p){d(t,p)}}}const Ce={title:"Multi command snippets in VSCode",author:"henrikvilhelmberglund",authorlink:"github.com/henrikvilhelmberglund/",date:"2022-10-05T00:00:00.000Z",layout:"notes"};function st(a,t,e){return a.$$set=o=>{e(0,t=ie(ie({},t),ye(o)))},t=ye(t),[t]}class ct extends Oe{constructor(t){super(),Pe(this,t,st,nt,Le,{})}}export{ct as default,Ce as metadata};
