var $=Object.freeze,z=Object.defineProperty;var v=(o,a)=>$(z(o,"raw",{value:$(a||o.slice())}));import{s as y,f as k,l as B,a as N,g as m,h as C,m as U,d as u,c as W,u as X,i,v as Y,X as Z,n as A,z as d,r as w,w as E,x as O,y as S,Y as F,e as b,Z as G}from"./scheduler.a7cd560e.js";import{S as T,i as D,b as H,d as I,m as V,a as r,t as _,e as q}from"./index.396264e7.js";import{E as J}from"./Example.e02fc6c1.js";function K(o){let a,e=o[0].count+"",s,n,t,p="Click me",f,g;return{c(){a=k("div"),s=B(e),n=N(),t=k("button"),t.textContent=p},l(c){a=m(c,"DIV",{});var l=C(a);s=U(l,e),l.forEach(u),n=W(c),t=m(c,"BUTTON",{["data-svelte-h"]:!0}),X(t)!=="svelte-1dchdp2"&&(t.textContent=p)},m(c,l){i(c,a,l),Y(a,s),i(c,n,l),i(c,t,l),f||(g=Z(t,"click",o[2]),f=!0)},p(c,[l]){l&1&&e!==(e=c[0].count+"")&&A(s,e)},i:d,o:d,d(c){c&&(u(a),u(n),u(t)),f=!1,g()}}}function L(o,a,e){let s={count:0};function n(){e(0,s.count++,s)}return[s,n,()=>n()]}class M extends T{constructor(a){super(),D(this,a,L,K,y,{})}}const P=o=>({}),h=o=>({slot:"example"}),Q=o=>({}),x=o=>({slot:"code"});function R(o){let a,e;return a=new M({}),{c(){H(a.$$.fragment)},l(s){I(a.$$.fragment,s)},m(s,n){V(a,s,n),e=!0},i(s){e||(r(a.$$.fragment,s),e=!0)},o(s){_(a.$$.fragment,s),e=!1},d(s){q(a,s)}}}function nn(o){let a;const e=o[0].default,s=w(e,o,o[1],h),n=s||R();return{c(){n&&n.c()},l(t){n&&n.l(t)},m(t,p){n&&n.m(t,p),a=!0},p(t,p){s&&s.p&&(!a||p&2)&&E(s,e,t,t[1],a?S(e,t[1],p,P):O(t[1]),h)},i(t){a||(r(n,t),a=!0)},o(t){_(n,t),a=!1},d(t){n&&n.d(t)}}}function tn(o){let a,e=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">{</span>obj<span class="token punctuation">.</span>count<span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>`,s;return{c(){a=new F(!1),s=b(),this.h()},l(n){a=G(n,!1),s=b(),this.h()},h(){a.a=s},m(n,t){a.m(e,n,t),i(n,s,t)},p:d,d(n){n&&(u(s),a.d())}}}function an(o){let a;const e=o[0].default,s=w(e,o,o[1],x),n=s||tn();return{c(){n&&n.c()},l(t){n&&n.l(t)},m(t,p){n&&n.m(t,p),a=!0},p(t,p){s&&s.p&&(!a||p&2)&&E(s,e,t,t[1],a?S(e,t[1],p,Q):O(t[1]),x)},i(t){a||(r(n,t),a=!0)},o(t){_(n,t),a=!1},d(t){n&&n.d(t)}}}var j;function sn(o){let a,e,s;return e=new J({props:{src:String.raw(j||(j=v([`<script>
let obj = {
count: 0
};
function increment() {
obj.count++;
}
<\/script>
<div>{obj.count}</div>
<button on:click={()=>increment()}>Click me</button>`]))),meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[an],example:[nn]},$$scope:{ctx:o}}}),{c(){a=k("div"),H(e.$$.fragment)},l(n){a=m(n,"DIV",{});var t=C(a);I(e.$$.fragment,t),t.forEach(u)},m(n,t){i(n,a,t),V(e,a,null),s=!0},p(n,[t]){const p={};t&2&&(p.$$scope={dirty:t,ctx:n}),e.$set(p)},i(n){s||(r(e.$$.fragment,n),s=!0)},o(n){_(e.$$.fragment,n),s=!1},d(n){n&&u(a),q(e)}}}function en(o,a,e){let{$$slots:s={},$$scope:n}=a;return o.$$set=t=>{"$$scope"in t&&e(1,n=t.$$scope)},[s,n]}class un extends T{constructor(a){super(),D(this,a,en,sn,y,{})}}export{un as default};
