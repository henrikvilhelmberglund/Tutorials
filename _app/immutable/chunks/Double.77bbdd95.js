var w=Object.freeze,A=Object.defineProperty;var y=(o,t)=>w(A(o,"raw",{value:w(t||o.slice())}));import{s as z,f as $,a as C,l as d,g as b,u as j,c as T,m as g,i,X as E,n as F,z as v,d as c,H as G,h as J,r as B,w as N,x as O,y as U,Y as K,e as D,Z as L}from"./scheduler.a7cd560e.js";import{S as I,i as V,b as W,d as X,m as Y,a as k,t as m,e as Z}from"./index.396264e7.js";import{E as M}from"./Example.e02fc6c1.js";function P(o){let t,e="-",a,n,s,p,f,r,h="+",_,x;return{c(){t=$("button"),t.textContent=e,a=C(),n=d(o[0]),s=d(" * 2 = "),p=d(o[1]),f=C(),r=$("button"),r.textContent=h},l(l){t=b(l,"BUTTON",{["data-svelte-h"]:!0}),j(t)!=="svelte-1uw3qz6"&&(t.textContent=e),a=T(l),n=g(l,o[0]),s=g(l," * 2 = "),p=g(l,o[1]),f=T(l),r=b(l,"BUTTON",{["data-svelte-h"]:!0}),j(r)!=="svelte-g3ld9c"&&(r.textContent=h)},m(l,u){i(l,t,u),i(l,a,u),i(l,n,u),i(l,s,u),i(l,p,u),i(l,f,u),i(l,r,u),_||(x=[E(t,"click",o[3]),E(r,"click",o[2])],_=!0)},p(l,[u]){u&1&&F(n,l[0])},i:v,o:v,d(l){l&&(c(t),c(a),c(n),c(s),c(p),c(f),c(r)),_=!1,G(x)}}}function Q(o,t,e){let a=1,n=a*2;function s(){e(0,a++,a)}function p(){e(0,a--,a)}return[a,n,s,p]}class R extends I{constructor(t){super(),V(this,t,Q,P,z,{})}}const nn=o=>({}),H=o=>({slot:"example"}),tn=o=>({}),S=o=>({slot:"code"});function sn(o){let t,e;return t=new R({}),{c(){W(t.$$.fragment)},l(a){X(t.$$.fragment,a)},m(a,n){Y(t,a,n),e=!0},i(a){e||(k(t.$$.fragment,a),e=!0)},o(a){m(t.$$.fragment,a),e=!1},d(a){Z(t,a)}}}function an(o){let t;const e=o[0].default,a=B(e,o,o[1],H),n=a||sn();return{c(){n&&n.c()},l(s){n&&n.l(s)},m(s,p){n&&n.m(s,p),t=!0},p(s,p){a&&a.p&&(!t||p&2)&&N(a,e,s,s[1],t?U(e,s[1],p,nn):O(s[1]),H)},i(s){t||(k(n,s),t=!0)},o(s){m(n,s),t=!1},d(s){n&&n.d(s)}}}function en(o){let t,e=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> double <span class="token operator">=</span> count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>decrement<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token language-javascript"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span> * 2 = <span class="token language-javascript"><span class="token punctuation">{</span>double<span class="token punctuation">}</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>increment<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>`,a;return{c(){t=new K(!1),a=D(),this.h()},l(n){t=L(n,!1),a=D(),this.h()},h(){t.a=a},m(n,s){t.m(e,n,s),i(n,a,s)},p:v,d(n){n&&(c(a),t.d())}}}function on(o){let t;const e=o[0].default,a=B(e,o,o[1],S),n=a||en();return{c(){n&&n.c()},l(s){n&&n.l(s)},m(s,p){n&&n.m(s,p),t=!0},p(s,p){a&&a.p&&(!t||p&2)&&N(a,e,s,s[1],t?U(e,s[1],p,tn):O(s[1]),S)},i(s){t||(k(n,s),t=!0)},o(s){m(n,s),t=!1},d(s){n&&n.d(s)}}}var q;function pn(o){let t,e,a;return e=new M({props:{src:String.raw(q||(q=y([`<script>
let count = 1;
let double = count * 2;
function increment() {
count++;
}
function decrement() {
count--;
}
<\/script>
<button on:click={decrement}>-</button>
{count} * 2 = {double}
<button on:click={increment}>+</button>`]))),meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[on],example:[an]},$$scope:{ctx:o}}}),{c(){t=$("div"),W(e.$$.fragment)},l(n){t=b(n,"DIV",{});var s=J(t);X(e.$$.fragment,s),s.forEach(c)},m(n,s){i(n,t,s),Y(e,t,null),a=!0},p(n,[s]){const p={};s&2&&(p.$$scope={dirty:s,ctx:n}),e.$set(p)},i(n){a||(k(e.$$.fragment,n),a=!0)},o(n){m(e.$$.fragment,n),a=!1},d(n){n&&c(t),Z(e)}}}function ln(o,t,e){let{$$slots:a={},$$scope:n}=t;return o.$$set=s=>{"$$scope"in s&&e(1,n=s.$$scope)},[a,n]}class kn extends I{constructor(t){super(),V(this,t,ln,pn,z,{})}}export{kn as default};
