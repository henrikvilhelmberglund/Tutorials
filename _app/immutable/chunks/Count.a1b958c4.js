var g=Object.freeze,z=Object.defineProperty;var $=(o,t)=>g(z(o,"raw",{value:g(t||o.slice())}));import{s as C,f as _,l as B,a as N,g as m,h as w,m as O,d as u,c as U,u as W,i,v as X,X as Y,n as Z,z as k,r as y,w as E,x as j,y as S,Y as A,e as v,Z as F}from"./scheduler.a7cd560e.js";import{S as T,i as D,b as H,d as I,m as V,a as r,t as f,e as q}from"./index.396264e7.js";import{E as G}from"./Example.e02fc6c1.js";function J(o){let t,e,s,n,a="Click me",c,d;return{c(){t=_("div"),e=B(o[0]),s=N(),n=_("button"),n.textContent=a},l(l){t=m(l,"DIV",{});var p=w(t);e=O(p,o[0]),p.forEach(u),s=U(l),n=m(l,"BUTTON",{["data-svelte-h"]:!0}),W(n)!=="svelte-1dchdp2"&&(n.textContent=a)},m(l,p){i(l,t,p),X(t,e),i(l,s,p),i(l,n,p),c||(d=Y(n,"click",o[2]),c=!0)},p(l,[p]){p&1&&Z(e,l[0])},i:k,o:k,d(l){l&&(u(t),u(s),u(n)),c=!1,d()}}}function K(o,t,e){let s=0;function n(){e(0,s++,s)}return[s,n,()=>n()]}class L extends T{constructor(t){super(),D(this,t,K,J,C,{})}}const M=o=>({}),h=o=>({slot:"example"}),P=o=>({}),b=o=>({slot:"code"});function Q(o){let t,e;return t=new L({}),{c(){H(t.$$.fragment)},l(s){I(t.$$.fragment,s)},m(s,n){V(t,s,n),e=!0},i(s){e||(r(t.$$.fragment,s),e=!0)},o(s){f(t.$$.fragment,s),e=!1},d(s){q(t,s)}}}function R(o){let t;const e=o[0].default,s=y(e,o,o[1],h),n=s||Q();return{c(){n&&n.c()},l(a){n&&n.l(a)},m(a,c){n&&n.m(a,c),t=!0},p(a,c){s&&s.p&&(!t||c&2)&&E(s,e,a,a[1],t?S(e,a[1],c,M):j(a[1]),h)},i(a){t||(r(n,a),t=!0)},o(a){f(n,a),t=!1},d(a){n&&n.d(a)}}}function nn(o){let t,e=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>`,s;return{c(){t=new A(!1),s=v(),this.h()},l(n){t=F(n,!1),s=v(),this.h()},h(){t.a=s},m(n,a){t.m(e,n,a),i(n,s,a)},p:k,d(n){n&&(u(s),t.d())}}}function tn(o){let t;const e=o[0].default,s=y(e,o,o[1],b),n=s||nn();return{c(){n&&n.c()},l(a){n&&n.l(a)},m(a,c){n&&n.m(a,c),t=!0},p(a,c){s&&s.p&&(!t||c&2)&&E(s,e,a,a[1],t?S(e,a[1],c,P):j(a[1]),b)},i(a){t||(r(n,a),t=!0)},o(a){f(n,a),t=!1},d(a){n&&n.d(a)}}}var x;function an(o){let t,e,s;return e=new G({props:{src:String.raw(x||(x=$([`<script>
let count = 0;
function increment() {
count++;
}
<\/script>
<div>{count}</div>
<button on:click={()=>increment()}>Click me</button>`]))),meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[tn],example:[R]},$$scope:{ctx:o}}}),{c(){t=_("div"),H(e.$$.fragment)},l(n){t=m(n,"DIV",{});var a=w(t);I(e.$$.fragment,a),a.forEach(u)},m(n,a){i(n,t,a),V(e,t,null),s=!0},p(n,[a]){const c={};a&2&&(c.$$scope={dirty:a,ctx:n}),e.$set(c)},i(n){s||(r(e.$$.fragment,n),s=!0)},o(n){f(e.$$.fragment,n),s=!1},d(n){n&&u(t),q(e)}}}function sn(o,t,e){let{$$slots:s={},$$scope:n}=t;return o.$$set=a=>{"$$scope"in a&&e(1,n=a.$$scope)},[s,n]}class pn extends T{constructor(t){super(),D(this,t,sn,an,C,{})}}export{pn as default};
