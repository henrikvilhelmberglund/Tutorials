import{S as K,i as R,s as U,k as H,a as b,e as Y,l as S,c as x,n as V,b as u,P as Z,H as A,h as m,q as _,m as L,r as d,D as q,aa as E,T as F,J as D,y as g,z as h,A as w,K as G,L as j,g as y,d as v,B as T,M as z}from"./index.37298988.js";import{M as Q,P as I}from"./mdsvex-layout-notes.28d092d4.js";import{S as W}from"./ShowMany.1ce9c697.js";import{S as M}from"./Strong.b6d58cbc.js";function B($){let e,n,o,r,t,s,a;return{c(){e=H("div"),n=_("Hello"),o=b(),r=H("h1"),t=_("My text will change soon!")},l(i){e=S(i,"DIV",{});var l=L(e);n=d(l,"Hello"),l.forEach(m),o=x(i),r=S(i,"H1",{});var c=L(r);t=d(c,"My text will change soon!"),c.forEach(m)},m(i,l){u(i,e,l),q(e,n),u(i,o,l),u(i,r,l),q(r,t),s||(a=[E(C.call(null,e)),E(C.call(null,r,"My text changed! ðŸ˜Š"))],s=!0)},d(i){i&&m(e),i&&m(o),i&&m(r),s=!1,F(a)}}}function X($){let e,n,o,r,t,s=$[0]&&B();return{c(){e=H("input"),n=b(),s&&s.c(),o=Y(),this.h()},l(a){e=S(a,"INPUT",{type:!0}),n=x(a),s&&s.l(a),o=Y(),this.h()},h(){V(e,"type","checkbox")},m(a,i){u(a,e,i),e.checked=$[0],u(a,n,i),s&&s.m(a,i),u(a,o,i),r||(t=Z(e,"change",$[1]),r=!0)},p(a,[i]){i&1&&(e.checked=a[0]),a[0]?s||(s=B(),s.c(),s.m(o.parentNode,o)):s&&(s.d(1),s=null)},i:A,o:A,d(a){a&&m(e),a&&m(n),s&&s.d(a),a&&m(o),r=!1,t()}}}function C($,e){let n;return console.log("hi! I was created!",$),e&&(n=setTimeout(()=>{$.innerHTML=e,console.log("wow! I was changed!")},3e3)),{destroy(){console.log("bye! I was destroyed"),e&&clearTimeout(n)}}}function ee($,e,n){let o=!0;function r(){o=this.checked,n(0,o)}return[o,r]}class te extends K{constructor(e){super(),R(this,e,ee,X,U,{})}}const ne=`<script>\r
	let show = true;\r
	function action(node, params) {\r
    let myTimeout;\r
		console.log("hi! I was created!", node);\r
		if (params) {\r
			myTimeout = setTimeout(() => {\r
				node.innerHTML = params;\r
				console.log("wow! I was changed!");\r
			}, 3000);\r
		}\r
		return {\r
			destroy() {\r
				console.log("bye! I was destroyed");\r
				if (params) {\r
					clearTimeout(myTimeout);\r
				}\r
			},\r
		};\r
	}\r
<\/script>\r
\r
<input type="checkbox" bind:checked={show} />\r
\r
{#if show}\r
	<div use:action>Hello</div>\r
	<h1 use:action={"My text changed! ðŸ˜Š"}>My text will change soon!</h1>\r
{/if}\r
\r
<style>\r
</style>\r
`;function se($){let e;return{c(){e=_("lifecycle functions for your elements")},l(n){e=d(n,"lifecycle functions for your elements")},m(n,o){u(n,e,o)},d(n){n&&m(e)}}}function oe($){let e,n,o,r;return n=new M({props:{$$slots:{default:[se]},$$scope:{ctx:$}}}),{c(){e=_("Actions are "),g(n.$$.fragment),o=_(". They are called whenever the element is mounted to the DOM.")},l(t){e=d(t,"Actions are "),h(n.$$.fragment,t),o=d(t,". They are called whenever the element is mounted to the DOM.")},m(t,s){u(t,e,s),w(n,t,s),u(t,o,s),r=!0},p(t,s){const a={};s&2&&(a.$$scope={dirty:s,ctx:t}),n.$set(a)},i(t){r||(y(n.$$.fragment,t),r=!0)},o(t){v(n.$$.fragment,t),r=!1},d(t){t&&m(e),T(n,t),t&&m(o)}}}function le($){let e;return{c(){e=_("use:functionName")},l(n){e=d(n,"use:functionName")},m(n,o){u(n,e,o)},d(n){n&&m(e)}}}function re($){let e,n,o,r;return n=new M({props:{$$slots:{default:[le]},$$scope:{ctx:$}}}),{c(){e=_("You add them by adding "),g(n.$$.fragment),o=_(" in the element.")},l(t){e=d(t,"You add them by adding "),h(n.$$.fragment,t),o=d(t," in the element.")},m(t,s){u(t,e,s),w(n,t,s),u(t,o,s),r=!0},p(t,s){const a={};s&2&&(a.$$scope={dirty:s,ctx:t}),n.$set(a)},i(t){r||(y(n.$$.fragment,t),r=!0)},o(t){v(n.$$.fragment,t),r=!1},d(t){t&&m(e),T(n,t),t&&m(o)}}}function ae($){let e;return{c(){e=_("destroy()")},l(n){e=d(n,"destroy()")},m(n,o){u(n,e,o)},d(n){n&&m(e)}}}function fe($){let e,n,o,r;return n=new M({props:{$$slots:{default:[ae]},$$scope:{ctx:$}}}),{c(){e=_("They can also contain an optional "),g(n.$$.fragment),o=_(" function that is called whenever the element is removed from the DOM.")},l(t){e=d(t,"They can also contain an optional "),h(n.$$.fragment,t),o=d(t," function that is called whenever the element is removed from the DOM.")},m(t,s){u(t,e,s),w(n,t,s),u(t,o,s),r=!0},p(t,s){const a={};s&2&&(a.$$scope={dirty:s,ctx:t}),n.$set(a)},i(t){r||(y(n.$$.fragment,t),r=!0)},o(t){v(n.$$.fragment,t),r=!1},d(t){t&&m(e),T(n,t),t&&m(o)}}}function $e($){let e;return{c(){e=_("node")},l(n){e=d(n,"node")},m(n,o){u(n,e,o)},d(n){n&&m(e)}}}function me($){let e;return{c(){e=_("params")},l(n){e=d(n,"params")},m(n,o){u(n,e,o)},d(n){n&&m(e)}}}function ie($){let e,n="{",o,r="}",t;return{c(){e=_("use:action="),o=_(n),t=_(r)},l(s){e=d(s,"use:action="),o=d(s,n),t=d(s,r)},m(s,a){u(s,e,a),u(s,o,a),u(s,t,a)},p:A,d(s){s&&m(e),s&&m(o),s&&m(t)}}}function ue($){let e,n,o,r,t,s,a,i;return n=new M({props:{$$slots:{default:[$e]},$$scope:{ctx:$}}}),r=new M({props:{$$slots:{default:[me]},$$scope:{ctx:$}}}),s=new M({props:{$$slots:{default:[ie]},$$scope:{ctx:$}}}),{c(){e=_("You can pass two parameters, "),g(n.$$.fragment),o=_(" and "),g(r.$$.fragment),t=_(". Node is the element itself and params are whatever you pass into the action using the "),g(s.$$.fragment),a=_(" syntax.")},l(l){e=d(l,"You can pass two parameters, "),h(n.$$.fragment,l),o=d(l," and "),h(r.$$.fragment,l),t=d(l,". Node is the element itself and params are whatever you pass into the action using the "),h(s.$$.fragment,l),a=d(l," syntax.")},m(l,c){u(l,e,c),w(n,l,c),u(l,o,c),w(r,l,c),u(l,t,c),w(s,l,c),u(l,a,c),i=!0},p(l,c){const f={};c&2&&(f.$$scope={dirty:c,ctx:l}),n.$set(f);const p={};c&2&&(p.$$scope={dirty:c,ctx:l}),r.$set(p);const k={};c&2&&(k.$$scope={dirty:c,ctx:l}),s.$set(k)},i(l){i||(y(n.$$.fragment,l),y(r.$$.fragment,l),y(s.$$.fragment,l),i=!0)},o(l){v(n.$$.fragment,l),v(r.$$.fragment,l),v(s.$$.fragment,l),i=!1},d(l){l&&m(e),T(n,l),l&&m(o),T(r,l),l&&m(t),T(s,l),l&&m(a)}}}function ce($){let e,n,o,r,t,s,a,i,l,c;return e=new I({props:{$$slots:{default:[oe]},$$scope:{ctx:$}}}),o=new I({props:{$$slots:{default:[re]},$$scope:{ctx:$}}}),t=new I({props:{$$slots:{default:[fe]},$$scope:{ctx:$}}}),a=new I({props:{$$slots:{default:[ue]},$$scope:{ctx:$}}}),l=new W({props:{name:[{name:"App",comp:te,raw:ne,text:"In this example I'm passing params for the h1 and changing its text."}]}}),{c(){g(e.$$.fragment),n=b(),g(o.$$.fragment),r=b(),g(t.$$.fragment),s=b(),g(a.$$.fragment),i=b(),g(l.$$.fragment)},l(f){h(e.$$.fragment,f),n=x(f),h(o.$$.fragment,f),r=x(f),h(t.$$.fragment,f),s=x(f),h(a.$$.fragment,f),i=x(f),h(l.$$.fragment,f)},m(f,p){w(e,f,p),u(f,n,p),w(o,f,p),u(f,r,p),w(t,f,p),u(f,s,p),w(a,f,p),u(f,i,p),w(l,f,p),c=!0},p(f,p){const k={};p&2&&(k.$$scope={dirty:p,ctx:f}),e.$set(k);const N={};p&2&&(N.$$scope={dirty:p,ctx:f}),o.$set(N);const O={};p&2&&(O.$$scope={dirty:p,ctx:f}),t.$set(O);const P={};p&2&&(P.$$scope={dirty:p,ctx:f}),a.$set(P)},i(f){c||(y(e.$$.fragment,f),y(o.$$.fragment,f),y(t.$$.fragment,f),y(a.$$.fragment,f),y(l.$$.fragment,f),c=!0)},o(f){v(e.$$.fragment,f),v(o.$$.fragment,f),v(t.$$.fragment,f),v(a.$$.fragment,f),v(l.$$.fragment,f),c=!1},d(f){T(e,f),f&&m(n),T(o,f),f&&m(r),T(t,f),f&&m(s),T(a,f),f&&m(i),T(l,f)}}}function pe($){let e,n;const o=[$[0],J];let r={$$slots:{default:[ce]},$$scope:{ctx:$}};for(let t=0;t<o.length;t+=1)r=D(r,o[t]);return e=new Q({props:r}),{c(){g(e.$$.fragment)},l(t){h(e.$$.fragment,t)},m(t,s){w(e,t,s),n=!0},p(t,[s]){const a=s&1?G(o,[s&1&&j(t[0]),s&0&&j(J)]):{};s&2&&(a.$$scope={dirty:s,ctx:t}),e.$set(a)},i(t){n||(y(e.$$.fragment,t),n=!0)},o(t){v(e.$$.fragment,t),n=!1},d(t){T(e,t)}}}const J={title:"Intro to Svelte action",author:"henrikvilhelmberglund",authorlink:"github.com/henrikvilhelmberglund/",date:"2023-04-01T00:00:00.000Z",layout:"notes"};function _e($,e,n){return $.$$set=o=>{n(0,e=D(D({},e),z(o)))},e=z(e),[e]}class ye extends K{constructor(e){super(),R(this,e,_e,pe,U,{})}}export{ye as default,J as metadata};
