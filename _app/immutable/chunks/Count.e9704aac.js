var T=Object.freeze,K=Object.defineProperty;var j=(o,s)=>T(K(o,"raw",{value:T(s||o.slice())}));import{S as z,i as A,s as F,k as v,q as k,a as C,l as h,m as w,r as _,h as u,c as B,b as i,D as H,P as S,u as q,H as y,T as L,y as G,z as I,A as P,g as d,d as $,B as Q,C as R,E as V,F as W,G as J,Q as M,e as D,R as X}from"./index.37298988.js";import{E as Y}from"./Example.0a49acc8.js";function Z(o){let s,e,a,n,t,c=o[0]*2+"",f,m,r,g,b,x;return{c(){s=v("button"),e=k("-"),a=C(),n=k(o[0]),t=k(" * 2 = "),f=k(c),m=C(),r=v("button"),g=k("+")},l(p){s=h(p,"BUTTON",{});var l=w(s);e=_(l,"-"),l.forEach(u),a=B(p),n=_(p,o[0]),t=_(p," * 2 = "),f=_(p,c),m=B(p),r=h(p,"BUTTON",{});var E=w(r);g=_(E,"+"),E.forEach(u)},m(p,l){i(p,s,l),H(s,e),i(p,a,l),i(p,n,l),i(p,t,l),i(p,f,l),i(p,m,l),i(p,r,l),H(r,g),b||(x=[S(s,"click",o[2]),S(r,"click",o[1])],b=!0)},p(p,[l]){l&1&&q(n,p[0]),l&1&&c!==(c=p[0]*2+"")&&q(f,c)},i:y,o:y,d(p){p&&u(s),p&&u(a),p&&u(n),p&&u(t),p&&u(f),p&&u(m),p&&u(r),b=!1,L(x)}}}function nn(o,s,e){let a=1;function n(){e(0,a++,a)}function t(){e(0,a--,a)}return[a,n,t]}class sn extends z{constructor(s){super(),A(this,s,nn,Z,F,{})}}const tn=o=>({}),N=o=>({slot:"example"}),an=o=>({}),O=o=>({slot:"code"});function en(o){let s,e;return s=new sn({}),{c(){G(s.$$.fragment)},l(a){I(s.$$.fragment,a)},m(a,n){P(s,a,n),e=!0},i(a){e||(d(s.$$.fragment,a),e=!0)},o(a){$(s.$$.fragment,a),e=!1},d(a){Q(s,a)}}}function on(o){let s;const e=o[0].default,a=R(e,o,o[1],N),n=a||en();return{c(){n&&n.c()},l(t){n&&n.l(t)},m(t,c){n&&n.m(t,c),s=!0},p(t,c){a&&a.p&&(!s||c&2)&&V(a,e,t,t[1],s?J(e,t[1],c,tn):W(t[1]),N)},i(t){s||(d(n,t),s=!0)},o(t){$(n,t),s=!1},d(t){n&&n.d(t)}}}function pn(o){let s,e=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>decrement<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token language-javascript"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span> * 2 = <span class="token language-javascript"><span class="token punctuation">{</span>count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">}</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>increment<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>`,a;return{c(){s=new M(!1),a=D(),this.h()},l(n){s=X(n,!1),a=D(),this.h()},h(){s.a=a},m(n,t){s.m(e,n,t),i(n,a,t)},p:y,d(n){n&&u(a),n&&s.d()}}}function cn(o){let s;const e=o[0].default,a=R(e,o,o[1],O),n=a||pn();return{c(){n&&n.c()},l(t){n&&n.l(t)},m(t,c){n&&n.m(t,c),s=!0},p(t,c){a&&a.p&&(!s||c&2)&&V(a,e,t,t[1],s?J(e,t[1],c,an):W(t[1]),O)},i(t){s||(d(n,t),s=!0)},o(t){$(n,t),s=!1},d(t){n&&n.d(t)}}}var U;function ln(o){let s,e,a;return e=new Y({props:{src:String.raw(U||(U=j([`<script>
let count = 1;
function increment() {
count++;
}
function decrement() {
count--;
}
<\/script>
<button on:click={decrement}>-</button>
{count} * 2 = {count * 2}
<button on:click={increment}>+</button>`]))),meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[cn],example:[on]},$$scope:{ctx:o}}}),{c(){s=v("div"),G(e.$$.fragment)},l(n){s=h(n,"DIV",{});var t=w(s);I(e.$$.fragment,t),t.forEach(u)},m(n,t){i(n,s,t),P(e,s,null),a=!0},p(n,[t]){const c={};t&2&&(c.$$scope={dirty:t,ctx:n}),e.$set(c)},i(n){a||(d(e.$$.fragment,n),a=!0)},o(n){$(e.$$.fragment,n),a=!1},d(n){n&&u(s),Q(e)}}}function un(o,s,e){let{$$slots:a={},$$scope:n}=s;return o.$$set=t=>{"$$scope"in t&&e(1,n=t.$$scope)},[a,n]}class _n extends z{constructor(s){super(),A(this,s,un,ln,F,{})}}export{_n as default};
