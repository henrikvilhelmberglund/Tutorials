var Vn=Object.freeze,Zn=Object.defineProperty;var dn=(l,n)=>Vn(Zn(l,"raw",{value:Vn(n||l.slice())}));import{S as q,i as F,s as B,k as I,q as $,l as j,m as V,r as _,h as c,b as r,D as L,N as A,B as S,w,x as C,y as b,f as k,t as g,z as P,C as z,E as G,F as K,G as N,O as ln,e as R,P as on,U as Xn,a as H,c as M,V as Yn,Q as hn,W as yn,J as vn,K as nt,L as Ln,M as Hn,n as tt}from"./index-ef26d8d7.js";import{M as st,P as U}from"./mdsvex-layout-notes-6d1b5969.js";import{E as pn}from"./Example-968d9e16.js";import{H as et}from"./H3-939429c4.js";import{S as J}from"./Strong-ed314baf.js";function at(l){let n,s,a,e,t;return{c(){n=I("h1"),s=$("Click me"),a=$(" (will show in the console)")},l(o){n=j(o,"H1",{});var i=V(n);s=_(i,"Click me"),i.forEach(c),a=_(o," (will show in the console)")},m(o,i){r(o,n,i),L(n,s),r(o,a,i),e||(t=A(n,"click",lt),e=!0)},p:S,i:S,o:S,d(o){o&&c(n),o&&c(a),e=!1,t()}}}function lt(){console.log("you clicked!")}class ot extends q{constructor(n){super(),F(this,n,null,at,B,{})}}const pt=l=>({}),Mn=l=>({slot:"example"}),ct=l=>({}),On=l=>({slot:"code"});function it(l){let n,s;return n=new ot({}),{c(){w(n.$$.fragment)},l(a){C(n.$$.fragment,a)},m(a,e){b(n,a,e),s=!0},i(a){s||(k(n.$$.fragment,a),s=!0)},o(a){g(n.$$.fragment,a),s=!1},d(a){P(n,a)}}}function ut(l){let n;const s=l[0].default,a=z(s,l,l[1],Mn),e=a||it();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,pt):K(t[1]),Mn)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}function rt(l){let n,s=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">function</span> <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"you clicked!"</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span> (will show in the console)`,a;return{c(){n=new ln(!1),a=R(),this.h()},l(e){n=on(e,!1),a=R(),this.h()},h(){n.a=a},m(e,t){n.m(s,e,t),r(e,a,t)},p:S,d(e){e&&c(a),e&&n.d()}}}function ft(l){let n;const s=l[0].default,a=z(s,l,l[1],On),e=a||rt();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,ct):K(t[1]),On)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}var Qn;function $t(l){let n,s,a;return s=new pn({props:{src:String.raw(Qn||(Qn=dn([`<script>
function handleClick() {
console.log("you clicked!")
}
<\/script>
<h1 on:click={handleClick}>Click me</h1> (will show in the console)`]))),meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[ft],example:[ut]},$$scope:{ctx:l}}}),{c(){n=I("div"),w(s.$$.fragment)},l(e){n=j(e,"DIV",{});var t=V(n);C(s.$$.fragment,t),t.forEach(c)},m(e,t){r(e,n,t),b(s,n,null),a=!0},p(e,[t]){const o={};t&2&&(o.$$scope={dirty:t,ctx:e}),s.$set(o)},i(e){a||(k(s.$$.fragment,e),a=!0)},o(e){g(s.$$.fragment,e),a=!1},d(e){e&&c(n),P(s)}}}function _t(l,n,s){let{$$slots:a={},$$scope:e}=n;return l.$$set=t=>{"$$scope"in t&&s(1,e=t.$$scope)},[a,e]}class mt extends q{constructor(n){super(),F(this,n,_t,$t,B,{})}}function kt(l){let n,s,a,e,t;return{c(){n=I("h1"),s=$("Click me"),a=$(" (will show in the console)")},l(o){n=j(o,"H1",{});var i=V(n);s=_(i,"Click me"),i.forEach(c),a=_(o," (will show in the console)")},m(o,i){r(o,n,i),L(n,s),r(o,a,i),e||(t=A(n,"click",l[0]),e=!0)},p:S,i:S,o:S,d(o){o&&c(n),o&&c(a),e=!1,t()}}}function gt(l){return[()=>console.log("you clicked me!!")]}class dt extends q{constructor(n){super(),F(this,n,gt,kt,B,{})}}const vt=l=>({}),Tn=l=>({slot:"example"}),ht=l=>({}),An=l=>({slot:"code"});function wt(l){let n,s;return n=new dt({}),{c(){w(n.$$.fragment)},l(a){C(n.$$.fragment,a)},m(a,e){b(n,a,e),s=!0},i(a){s||(k(n.$$.fragment,a),s=!0)},o(a){g(n.$$.fragment,a),s=!1},d(a){P(n,a)}}}function Ct(l){let n;const s=l[0].default,a=z(s,l,l[1],Tn),e=a||wt();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,vt):K(t[1]),Tn)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}function bt(l){let n,s='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"you clicked me!!"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span> (will show in the console)',a;return{c(){n=new ln(!1),a=R(),this.h()},l(e){n=on(e,!1),a=R(),this.h()},h(){n.a=a},m(e,t){n.m(s,e,t),r(e,a,t)},p:S,d(e){e&&c(a),e&&n.d()}}}function Pt(l){let n;const s=l[0].default,a=z(s,l,l[1],An),e=a||bt();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,ht):K(t[1]),An)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}function Et(l){let n,s,a;return s=new pn({props:{src:String.raw`<h1 on:click={() => console.log("you clicked me!!")}>Click me</h1> (will show in the console)`,meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[Pt],example:[Ct]},$$scope:{ctx:l}}}),{c(){n=I("div"),w(s.$$.fragment)},l(e){n=j(e,"DIV",{});var t=V(n);C(s.$$.fragment,t),t.forEach(c)},m(e,t){r(e,n,t),b(s,n,null),a=!0},p(e,[t]){const o={};t&2&&(o.$$scope={dirty:t,ctx:e}),s.$set(o)},i(e){a||(k(s.$$.fragment,e),a=!0)},o(e){g(s.$$.fragment,e),a=!1},d(e){e&&c(n),P(s)}}}function xt(l,n,s){let{$$slots:a={},$$scope:e}=n;return l.$$set=t=>{"$$scope"in t&&s(1,e=t.$$scope)},[a,e]}class Wt extends q{constructor(n){super(),F(this,n,xt,Et,B,{})}}function Dt(l){let n,s,a,e,t;return{c(){n=I("h1"),s=$("Click me"),a=$(" (will show in the console)")},l(o){n=j(o,"H1",{});var i=V(n);s=_(i,"Click me"),i.forEach(c),a=_(o," (will show in the console)")},m(o,i){r(o,n,i),L(n,s),r(o,a,i),e||(t=A(n,"click",Xn(St)),e=!0)},p:S,i:S,o:S,d(o){o&&c(n),o&&c(a),e=!1,t()}}}function St(){console.log("you clicked!")}class It extends q{constructor(n){super(),F(this,n,null,Dt,B,{})}}const jt=l=>({}),Jn=l=>({slot:"example"}),Vt=l=>({}),qn=l=>({slot:"code"});function Lt(l){let n,s;return n=new It({}),{c(){w(n.$$.fragment)},l(a){C(n.$$.fragment,a)},m(a,e){b(n,a,e),s=!0},i(a){s||(k(n.$$.fragment,a),s=!0)},o(a){g(n.$$.fragment,a),s=!1},d(a){P(n,a)}}}function Ht(l){let n;const s=l[0].default,a=z(s,l,l[1],Jn),e=a||Lt();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,jt):K(t[1]),Jn)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}function Mt(l){let n,s=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">function</span> <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"you clicked!"</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name"><span class="token namespace">on:</span>click|preventDefault=</span><span class="token language-javascript"><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span> (will show in the console)`,a;return{c(){n=new ln(!1),a=R(),this.h()},l(e){n=on(e,!1),a=R(),this.h()},h(){n.a=a},m(e,t){n.m(s,e,t),r(e,a,t)},p:S,d(e){e&&c(a),e&&n.d()}}}function Ot(l){let n;const s=l[0].default,a=z(s,l,l[1],qn),e=a||Mt();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,Vt):K(t[1]),qn)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}var Un;function Tt(l){let n,s,a;return s=new pn({props:{src:String.raw(Un||(Un=dn([`<script>
function handleClick() {
console.log("you clicked!")
}
<\/script>
<h1 on:click|preventDefault={handleClick}>Click me</h1> (will show in the console)`]))),meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[Ot],example:[Ht]},$$scope:{ctx:l}}}),{c(){n=I("div"),w(s.$$.fragment)},l(e){n=j(e,"DIV",{});var t=V(n);C(s.$$.fragment,t),t.forEach(c)},m(e,t){r(e,n,t),b(s,n,null),a=!0},p(e,[t]){const o={};t&2&&(o.$$scope={dirty:t,ctx:e}),s.$set(o)},i(e){a||(k(s.$$.fragment,e),a=!0)},o(e){g(s.$$.fragment,e),a=!1},d(e){e&&c(n),P(s)}}}function At(l,n,s){let{$$slots:a={},$$scope:e}=n;return l.$$set=t=>{"$$scope"in t&&s(1,e=t.$$scope)},[a,e]}class Jt extends q{constructor(n){super(),F(this,n,At,Tt,B,{})}}function qt(l){let n,s,a,e,t,o,i,h,f,v,W,D,u,d;return{c(){n=$(`Without |stopPropagation
`),s=I("div"),a=$(`Parent
`),e=I("div"),t=$("Child"),o=H(),i=I("br"),h=$(`
With |stopPropagation
`),f=I("div"),v=$(`Parent
`),W=I("div"),D=$("Child")},l(E){n=_(E,`Without |stopPropagation
`),s=j(E,"DIV",{});var x=V(s);a=_(x,`Parent
`),e=j(x,"DIV",{});var O=V(e);t=_(O,"Child"),O.forEach(c),x.forEach(c),o=M(E),i=j(E,"BR",{}),h=_(E,`
With |stopPropagation
`),f=j(E,"DIV",{});var T=V(f);v=_(T,`Parent
`),W=j(T,"DIV",{});var Q=V(W);D=_(Q,"Child"),Q.forEach(c),T.forEach(c)},m(E,x){r(E,n,x),r(E,s,x),L(s,a),L(s,e),L(e,t),r(E,o,x),r(E,i,x),r(E,h,x),r(E,f,x),L(f,v),L(f,W),L(W,D),u||(d=[A(e,"click",l[0]),A(s,"click",l[1]),A(W,"click",Yn(l[2])),A(f,"click",l[3])],u=!0)},p:S,i:S,o:S,d(E){E&&c(n),E&&c(s),E&&c(o),E&&c(i),E&&c(h),E&&c(f),u=!1,hn(d)}}}function Ft(l){return[()=>console.log("Child"),()=>console.log("Parent"),()=>console.log("Child"),()=>console.log("Parent")]}class Bt extends q{constructor(n){super(),F(this,n,Ft,qt,B,{})}}const Rt=l=>({}),Fn=l=>({slot:"example"}),zt=l=>({}),Bn=l=>({slot:"code"});function Gt(l){let n,s;return n=new Bt({}),{c(){w(n.$$.fragment)},l(a){C(n.$$.fragment,a)},m(a,e){b(n,a,e),s=!0},i(a){s||(k(n.$$.fragment,a),s=!0)},o(a){g(n.$$.fragment,a),s=!1},d(a){P(n,a)}}}function Kt(l){let n;const s=l[0].default,a=z(s,l,l[1],Fn),e=a||Gt();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,Rt):K(t[1]),Fn)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}function Nt(l){let n,s=`Without |stopPropagation
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Parent"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
  Parent
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Child"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- output is "Child" then "Parent" --></span>
    Child
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>

With |stopPropagation
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Parent"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
  Parent
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click|stopPropagation=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Child"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- output is only "Child" since we stopped propagation --></span>
    Child
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>`,a;return{c(){n=new ln(!1),a=R(),this.h()},l(e){n=on(e,!1),a=R(),this.h()},h(){n.a=a},m(e,t){n.m(s,e,t),r(e,a,t)},p:S,d(e){e&&c(a),e&&n.d()}}}function Qt(l){let n;const s=l[0].default,a=z(s,l,l[1],Bn),e=a||Nt();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,zt):K(t[1]),Bn)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}function Ut(l){let n,s,a;return s=new pn({props:{src:String.raw`Without |stopPropagation
<div on:click={() => console.log("Parent")}>
Parent
<div on:click={() => console.log("Child")}>
<!-- output is "Child" then "Parent" -->
Child
</div>
</div>
<br>
With |stopPropagation
<div on:click={() => console.log("Parent")}>
Parent
<div on:click|stopPropagation={() => console.log("Child")}>
<!-- output is only "Child" since we stopped propagation -->
Child
</div>
</div>`,meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[Qt],example:[Kt]},$$scope:{ctx:l}}}),{c(){n=I("div"),w(s.$$.fragment)},l(e){n=j(e,"DIV",{});var t=V(n);C(s.$$.fragment,t),t.forEach(c)},m(e,t){r(e,n,t),b(s,n,null),a=!0},p(e,[t]){const o={};t&2&&(o.$$scope={dirty:t,ctx:e}),s.$set(o)},i(e){a||(k(s.$$.fragment,e),a=!0)},o(e){g(s.$$.fragment,e),a=!1},d(e){e&&c(n),P(s)}}}function Zt(l,n,s){let{$$slots:a={},$$scope:e}=n;return l.$$set=t=>{"$$scope"in t&&s(1,e=t.$$scope)},[a,e]}class Xt extends q{constructor(n){super(),F(this,n,Zt,Ut,B,{})}}function Yt(l){let n,s,a,e,t,o,i,h,f,v,W,D;return{c(){n=$(`Without |capture
`),s=I("div"),a=$(`Parent
`),e=I("div"),t=$("Child"),o=$(`
With |capture
`),i=I("div"),h=$(`Parent
`),f=I("div"),v=$("Child")},l(u){n=_(u,`Without |capture
`),s=j(u,"DIV",{});var d=V(s);a=_(d,`Parent
`),e=j(d,"DIV",{});var E=V(e);t=_(E,"Child"),E.forEach(c),d.forEach(c),o=_(u,`
With |capture
`),i=j(u,"DIV",{});var x=V(i);h=_(x,`Parent
`),f=j(x,"DIV",{});var O=V(f);v=_(O,"Child"),O.forEach(c),x.forEach(c)},m(u,d){r(u,n,d),r(u,s,d),L(s,a),L(s,e),L(e,t),r(u,o,d),r(u,i,d),L(i,h),L(i,f),L(f,v),W||(D=[A(e,"click",l[0]),A(s,"click",l[1]),A(f,"click",l[2]),A(i,"click",l[3],!0)],W=!0)},p:S,i:S,o:S,d(u){u&&c(n),u&&c(s),u&&c(o),u&&c(i),W=!1,hn(D)}}}function yt(l){return[()=>console.log("Child"),()=>console.log("Parent"),()=>console.log("Child"),()=>console.log("Parent")]}class ns extends q{constructor(n){super(),F(this,n,yt,Yt,B,{})}}const ts=l=>({}),Rn=l=>({slot:"example"}),ss=l=>({}),zn=l=>({slot:"code"});function es(l){let n,s;return n=new ns({}),{c(){w(n.$$.fragment)},l(a){C(n.$$.fragment,a)},m(a,e){b(n,a,e),s=!0},i(a){s||(k(n.$$.fragment,a),s=!0)},o(a){g(n.$$.fragment,a),s=!1},d(a){P(n,a)}}}function as(l){let n;const s=l[0].default,a=z(s,l,l[1],Rn),e=a||es();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,ts):K(t[1]),Rn)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}function ls(l){let n,s=`Without |capture
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Parent"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
  Parent
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Child"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- output is "Child" then "Parent" --></span>
    Child
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

With |capture
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click|capture=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Parent"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
  Parent
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Child"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- output is "Parent" then "Child" because of |capture --></span>
    Child
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>`,a;return{c(){n=new ln(!1),a=R(),this.h()},l(e){n=on(e,!1),a=R(),this.h()},h(){n.a=a},m(e,t){n.m(s,e,t),r(e,a,t)},p:S,d(e){e&&c(a),e&&n.d()}}}function os(l){let n;const s=l[0].default,a=z(s,l,l[1],zn),e=a||ls();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,ss):K(t[1]),zn)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}function ps(l){let n,s,a;return s=new pn({props:{src:String.raw`Without |capture
<div on:click={() => console.log("Parent")}>
Parent
<div on:click={() => console.log("Child")}>
<!-- output is "Child" then "Parent" -->
Child
</div>
</div>
With |capture
<div on:click|capture={() => console.log("Parent")}>
Parent
<div on:click={() => console.log("Child")}>
<!-- output is "Parent" then "Child" because of |capture -->
Child
</div>
</div>`,meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[os],example:[as]},$$scope:{ctx:l}}}),{c(){n=I("div"),w(s.$$.fragment)},l(e){n=j(e,"DIV",{});var t=V(n);C(s.$$.fragment,t),t.forEach(c)},m(e,t){r(e,n,t),b(s,n,null),a=!0},p(e,[t]){const o={};t&2&&(o.$$scope={dirty:t,ctx:e}),s.$set(o)},i(e){a||(k(s.$$.fragment,e),a=!0)},o(e){g(s.$$.fragment,e),a=!1},d(e){e&&c(n),P(s)}}}function cs(l,n,s){let{$$slots:a={},$$scope:e}=n;return l.$$set=t=>{"$$scope"in t&&s(1,e=t.$$scope)},[a,e]}class is extends q{constructor(n){super(),F(this,n,cs,ps,B,{})}}function us(l){let n,s,a,e,t,o,i,h,f,v,W,D;return{c(){n=$(`Without |self
`),s=I("div"),a=$(`Parent
`),e=I("div"),t=$("Child"),o=$(`
With |self
`),i=I("div"),h=$(`Parent
`),f=I("div"),v=$("Child")},l(u){n=_(u,`Without |self
`),s=j(u,"DIV",{});var d=V(s);a=_(d,`Parent
`),e=j(d,"DIV",{});var E=V(e);t=_(E,"Child"),E.forEach(c),d.forEach(c),o=_(u,`
With |self
`),i=j(u,"DIV",{});var x=V(i);h=_(x,`Parent
`),f=j(x,"DIV",{});var O=V(f);v=_(O,"Child"),O.forEach(c),x.forEach(c)},m(u,d){r(u,n,d),r(u,s,d),L(s,a),L(s,e),L(e,t),r(u,o,d),r(u,i,d),L(i,h),L(i,f),L(f,v),W||(D=[A(e,"click",l[0]),A(s,"click",l[1]),A(f,"click",l[2]),A(i,"click",yn(l[3]))],W=!0)},p:S,i:S,o:S,d(u){u&&c(n),u&&c(s),u&&c(o),u&&c(i),W=!1,hn(D)}}}function rs(l){return[()=>console.log("Child"),()=>console.log("Parent"),()=>console.log("Child"),()=>console.log("Parent")]}class fs extends q{constructor(n){super(),F(this,n,rs,us,B,{})}}const $s=l=>({}),Gn=l=>({slot:"example"}),_s=l=>({}),Kn=l=>({slot:"code"});function ms(l){let n,s;return n=new fs({}),{c(){w(n.$$.fragment)},l(a){C(n.$$.fragment,a)},m(a,e){b(n,a,e),s=!0},i(a){s||(k(n.$$.fragment,a),s=!0)},o(a){g(n.$$.fragment,a),s=!1},d(a){P(n,a)}}}function ks(l){let n;const s=l[0].default,a=z(s,l,l[1],Gn),e=a||ms();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,$s):K(t[1]),Gn)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}function gs(l){let n,s=`Without |self
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Parent"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
  Parent
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Child"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- output is "Child" then "Parent" --></span>
    Child
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

With |self
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click|self=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Parent"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
  Parent
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Child"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- output is only "Child" because event.target is not the parent div when clicking the child --></span>
    Child
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>`,a;return{c(){n=new ln(!1),a=R(),this.h()},l(e){n=on(e,!1),a=R(),this.h()},h(){n.a=a},m(e,t){n.m(s,e,t),r(e,a,t)},p:S,d(e){e&&c(a),e&&n.d()}}}function ds(l){let n;const s=l[0].default,a=z(s,l,l[1],Kn),e=a||gs();return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,o){e&&e.m(t,o),n=!0},p(t,o){a&&a.p&&(!n||o&2)&&G(a,s,t,t[1],n?N(s,t[1],o,_s):K(t[1]),Kn)},i(t){n||(k(e,t),n=!0)},o(t){g(e,t),n=!1},d(t){e&&e.d(t)}}}function vs(l){let n,s,a;return s=new pn({props:{src:String.raw`Without |self
<div on:click={() => console.log("Parent")}>
Parent
<div on:click={() => console.log("Child")}>
<!-- output is "Child" then "Parent" -->
Child
</div>
</div>
With |self
<div on:click|self={() => console.log("Parent")}>
Parent
<div on:click={() => console.log("Child")}>
<!-- output is only "Child" because event.target is not the parent div when clicking the child -->
Child
</div>
</div>`,meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[ds],example:[ks]},$$scope:{ctx:l}}}),{c(){n=I("div"),w(s.$$.fragment)},l(e){n=j(e,"DIV",{});var t=V(n);C(s.$$.fragment,t),t.forEach(c)},m(e,t){r(e,n,t),b(s,n,null),a=!0},p(e,[t]){const o={};t&2&&(o.$$scope={dirty:t,ctx:e}),s.$set(o)},i(e){a||(k(s.$$.fragment,e),a=!0)},o(e){g(s.$$.fragment,e),a=!1},d(e){e&&c(n),P(s)}}}function hs(l,n,s){let{$$slots:a={},$$scope:e}=n;return l.$$set=t=>{"$$scope"in t&&s(1,e=t.$$scope)},[a,e]}class ws extends q{constructor(n){super(),F(this,n,hs,vs,B,{})}}function Cs(l){let n;return{c(){n=$("In vanilla JS we do something like this:")},l(s){n=_(s,"In vanilla JS we do something like this:")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function bs(l){let n;return{c(){n=$("directly in the markup")},l(s){n=_(s,"directly in the markup")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function Ps(l){let n,s,a,e;return s=new J({props:{$$slots:{default:[bs]},$$scope:{ctx:l}}}),{c(){n=$("but in Svelte we can add event listeners "),w(s.$$.fragment),a=$(".")},l(t){n=_(t,"but in Svelte we can add event listeners "),C(s.$$.fragment,t),a=_(t,".")},m(t,o){r(t,n,o),b(s,t,o),r(t,a,o),e=!0},p(t,o){const i={};o&2&&(i.$$scope={dirty:o,ctx:t}),s.$set(i)},i(t){e||(k(s.$$.fragment,t),e=!0)},o(t){g(s.$$.fragment,t),e=!1},d(t){t&&c(n),P(s,t),t&&c(a)}}}function Es(l){let n;return{c(){n=$("Of course it's also possible to use arrow functions.")},l(s){n=_(s,"Of course it's also possible to use arrow functions.")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function xs(l){let n;return{c(){n=$("automatically be cleaned up")},l(s){n=_(s,"automatically be cleaned up")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function Ws(l){let n,s,a,e;return s=new J({props:{$$slots:{default:[xs]},$$scope:{ctx:l}}}),{c(){n=$("If the component is removed from the DOM the event listeners will "),w(s.$$.fragment),a=$(".")},l(t){n=_(t,"If the component is removed from the DOM the event listeners will "),C(s.$$.fragment,t),a=_(t,".")},m(t,o){r(t,n,o),b(s,t,o),r(t,a,o),e=!0},p(t,o){const i={};o&2&&(i.$$scope={dirty:o,ctx:t}),s.$set(i)},i(t){e||(k(s.$$.fragment,t),e=!0)},o(t){g(s.$$.fragment,t),e=!1},d(t){t&&c(n),P(s,t),t&&c(a)}}}function Ds(l){let n;return{c(){n=$("Event modifiers")},l(s){n=_(s,"Event modifiers")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function Ss(l){let n,s,a,e;return{c(){n=$("When we have forms in HTML we may want to use the JS "),s=I("code"),a=$("event.preventDefault();"),e=$(".")},l(t){n=_(t,"When we have forms in HTML we may want to use the JS "),s=j(t,"CODE",{});var o=V(s);a=_(o,"event.preventDefault();"),o.forEach(c),e=_(t,".")},m(t,o){r(t,n,o),r(t,s,o),L(s,a),r(t,e,o)},p:S,d(t){t&&c(n),t&&c(s),t&&c(e)}}}function Is(l){let n;return{c(){n=$("event modifier")},l(s){n=_(s,"event modifier")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function js(l){let n;return{c(){n=$("|")},l(s){n=_(s,"|")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function Vs(l){let n;return{c(){n=$("preventDefault")},l(s){n=_(s,"preventDefault")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function Ls(l){let n,s,a,e,t,o,i,h;return s=new J({props:{$$slots:{default:[Is]},$$scope:{ctx:l}}}),e=new J({props:{$$slots:{default:[js]},$$scope:{ctx:l}}}),o=new J({props:{$$slots:{default:[Vs]},$$scope:{ctx:l}}}),{c(){n=$("In Svelte we can have that as an "),w(s.$$.fragment),a=$(". After the event name we can add "),w(e.$$.fragment),t=$(" and "),w(o.$$.fragment),i=$(" to get the same effect without writing code in the script tag.")},l(f){n=_(f,"In Svelte we can have that as an "),C(s.$$.fragment,f),a=_(f,". After the event name we can add "),C(e.$$.fragment,f),t=_(f," and "),C(o.$$.fragment,f),i=_(f," to get the same effect without writing code in the script tag.")},m(f,v){r(f,n,v),b(s,f,v),r(f,a,v),b(e,f,v),r(f,t,v),b(o,f,v),r(f,i,v),h=!0},p(f,v){const W={};v&2&&(W.$$scope={dirty:v,ctx:f}),s.$set(W);const D={};v&2&&(D.$$scope={dirty:v,ctx:f}),e.$set(D);const u={};v&2&&(u.$$scope={dirty:v,ctx:f}),o.$set(u)},i(f){h||(k(s.$$.fragment,f),k(e.$$.fragment,f),k(o.$$.fragment,f),h=!0)},o(f){g(s.$$.fragment,f),g(e.$$.fragment,f),g(o.$$.fragment,f),h=!1},d(f){f&&c(n),P(s,f),f&&c(a),P(e,f),f&&c(t),P(o,f),f&&c(i)}}}function Hs(l){let n;return{c(){n=$("stopPropagation")},l(s){n=_(s,"stopPropagation")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function Ms(l){let n,s,a,e;return s=new J({props:{$$slots:{default:[Hs]},$$scope:{ctx:l}}}),{c(){n=$("There are also other modifiers like "),w(s.$$.fragment),a=$(" to prevent bubbling,")},l(t){n=_(t,"There are also other modifiers like "),C(s.$$.fragment,t),a=_(t," to prevent bubbling,")},m(t,o){r(t,n,o),b(s,t,o),r(t,a,o),e=!0},p(t,o){const i={};o&2&&(i.$$scope={dirty:o,ctx:t}),s.$set(i)},i(t){e||(k(s.$$.fragment,t),e=!0)},o(t){g(s.$$.fragment,t),e=!1},d(t){t&&c(n),P(s,t),t&&c(a)}}}function Os(l){let n;return{c(){n=$("options")},l(s){n=_(s,"options")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function Ts(l){let n;return{c(){n=$("capture")},l(s){n=_(s,"capture")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function As(l){let n,s,a,e,t,o;return s=new J({props:{$$slots:{default:[Os]},$$scope:{ctx:l}}}),e=new J({props:{$$slots:{default:[Ts]},$$scope:{ctx:l}}}),{c(){n=$("and the .addEventListener() third "),w(s.$$.fragment),a=$(" arguments are also available, for example "),w(e.$$.fragment),t=$(" to trigger the event in the capture phase.")},l(i){n=_(i,"and the .addEventListener() third "),C(s.$$.fragment,i),a=_(i," arguments are also available, for example "),C(e.$$.fragment,i),t=_(i," to trigger the event in the capture phase.")},m(i,h){r(i,n,h),b(s,i,h),r(i,a,h),b(e,i,h),r(i,t,h),o=!0},p(i,h){const f={};h&2&&(f.$$scope={dirty:h,ctx:i}),s.$set(f);const v={};h&2&&(v.$$scope={dirty:h,ctx:i}),e.$set(v)},i(i){o||(k(s.$$.fragment,i),k(e.$$.fragment,i),o=!0)},o(i){g(s.$$.fragment,i),g(e.$$.fragment,i),o=!1},d(i){i&&c(n),P(s,i),i&&c(a),P(e,i),i&&c(t)}}}function Js(l){let n;return{c(){n=$("once")},l(s){n=_(s,"once")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function qs(l){let n;return{c(){n=$("passive")},l(s){n=_(s,"passive")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function Fs(l){let n;return{c(){n=$("nonpassive")},l(s){n=_(s,"nonpassive")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function Bs(l){let n;return{c(){n=$("trusted")},l(s){n=_(s,"trusted")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function Rs(l){let n;return{c(){n=$("self")},l(s){n=_(s,"self")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function zs(l){let n,s,a,e,t,o,i,h,f,v,W,D;return s=new J({props:{$$slots:{default:[Js]},$$scope:{ctx:l}}}),e=new J({props:{$$slots:{default:[qs]},$$scope:{ctx:l}}}),o=new J({props:{$$slots:{default:[Fs]},$$scope:{ctx:l}}}),h=new J({props:{$$slots:{default:[Bs]},$$scope:{ctx:l}}}),v=new J({props:{$$slots:{default:[Rs]},$$scope:{ctx:l}}}),{c(){n=$("Other possible event modifiers are "),w(s.$$.fragment),a=$(", "),w(e.$$.fragment),t=$(", "),w(o.$$.fragment),i=$(", "),w(h.$$.fragment),f=$(" and "),w(v.$$.fragment),W=$(".")},l(u){n=_(u,"Other possible event modifiers are "),C(s.$$.fragment,u),a=_(u,", "),C(e.$$.fragment,u),t=_(u,", "),C(o.$$.fragment,u),i=_(u,", "),C(h.$$.fragment,u),f=_(u," and "),C(v.$$.fragment,u),W=_(u,".")},m(u,d){r(u,n,d),b(s,u,d),r(u,a,d),b(e,u,d),r(u,t,d),b(o,u,d),r(u,i,d),b(h,u,d),r(u,f,d),b(v,u,d),r(u,W,d),D=!0},p(u,d){const E={};d&2&&(E.$$scope={dirty:d,ctx:u}),s.$set(E);const x={};d&2&&(x.$$scope={dirty:d,ctx:u}),e.$set(x);const O={};d&2&&(O.$$scope={dirty:d,ctx:u}),o.$set(O);const T={};d&2&&(T.$$scope={dirty:d,ctx:u}),h.$set(T);const Q={};d&2&&(Q.$$scope={dirty:d,ctx:u}),v.$set(Q)},i(u){D||(k(s.$$.fragment,u),k(e.$$.fragment,u),k(o.$$.fragment,u),k(h.$$.fragment,u),k(v.$$.fragment,u),D=!0)},o(u){g(s.$$.fragment,u),g(e.$$.fragment,u),g(o.$$.fragment,u),g(h.$$.fragment,u),g(v.$$.fragment,u),D=!1},d(u){u&&c(n),P(s,u),u&&c(a),P(e,u),u&&c(t),P(o,u),u&&c(i),P(h,u),u&&c(f),P(v,u),u&&c(W)}}}function Gs(l){let n;return{c(){n=$("event.target is the element itself")},l(s){n=_(s,"event.target is the element itself")},m(s,a){r(s,n,a)},d(s){s&&c(n)}}}function Ks(l){let n,s,a,e;return s=new J({props:{$$slots:{default:[Gs]},$$scope:{ctx:l}}}),{c(){n=$("Self will only trigger if the "),w(s.$$.fragment),a=$(".")},l(t){n=_(t,"Self will only trigger if the "),C(s.$$.fragment,t),a=_(t,".")},m(t,o){r(t,n,o),b(s,t,o),r(t,a,o),e=!0},p(t,o){const i={};o&2&&(i.$$scope={dirty:o,ctx:t}),s.$set(i)},i(t){e||(k(s.$$.fragment,t),e=!0)},o(t){g(s.$$.fragment,t),e=!1},d(t){t&&c(n),P(s,t),t&&c(a)}}}function Ns(l){let n,s,a,e=`<code class="language-js"><span class="token keyword">let</span> h1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"h1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
h1<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,t,o,i,h,f,v,W,D,u,d,E,x,O,T,Q,Z,cn,tn,un,X,rn,sn,fn,Y,$n,en,_n,y,mn,nn,kn,an,gn;return n=new U({props:{$$slots:{default:[Cs]},$$scope:{ctx:l}}}),o=new U({props:{$$slots:{default:[Ps]},$$scope:{ctx:l}}}),h=new mt({}),v=new U({props:{$$slots:{default:[Es]},$$scope:{ctx:l}}}),D=new Wt({}),d=new U({props:{$$slots:{default:[Ws]},$$scope:{ctx:l}}}),x=new et({props:{$$slots:{default:[Ds]},$$scope:{ctx:l}}}),T=new U({props:{$$slots:{default:[Ss]},$$scope:{ctx:l}}}),Z=new U({props:{$$slots:{default:[Ls]},$$scope:{ctx:l}}}),tn=new Jt({}),X=new U({props:{$$slots:{default:[Ms]},$$scope:{ctx:l}}}),sn=new Xt({}),Y=new U({props:{$$slots:{default:[As]},$$scope:{ctx:l}}}),en=new is({}),y=new U({props:{$$slots:{default:[zs]},$$scope:{ctx:l}}}),nn=new U({props:{$$slots:{default:[Ks]},$$scope:{ctx:l}}}),an=new ws({}),{c(){w(n.$$.fragment),s=H(),a=I("pre"),t=H(),w(o.$$.fragment),i=H(),w(h.$$.fragment),f=H(),w(v.$$.fragment),W=H(),w(D.$$.fragment),u=H(),w(d.$$.fragment),E=H(),w(x.$$.fragment),O=H(),w(T.$$.fragment),Q=H(),w(Z.$$.fragment),cn=H(),w(tn.$$.fragment),un=H(),w(X.$$.fragment),rn=H(),w(sn.$$.fragment),fn=H(),w(Y.$$.fragment),$n=H(),w(en.$$.fragment),_n=H(),w(y.$$.fragment),mn=H(),w(nn.$$.fragment),kn=H(),w(an.$$.fragment),this.h()},l(p){C(n.$$.fragment,p),s=M(p),a=j(p,"PRE",{class:!0});var m=V(a);m.forEach(c),t=M(p),C(o.$$.fragment,p),i=M(p),C(h.$$.fragment,p),f=M(p),C(v.$$.fragment,p),W=M(p),C(D.$$.fragment,p),u=M(p),C(d.$$.fragment,p),E=M(p),C(x.$$.fragment,p),O=M(p),C(T.$$.fragment,p),Q=M(p),C(Z.$$.fragment,p),cn=M(p),C(tn.$$.fragment,p),un=M(p),C(X.$$.fragment,p),rn=M(p),C(sn.$$.fragment,p),fn=M(p),C(Y.$$.fragment,p),$n=M(p),C(en.$$.fragment,p),_n=M(p),C(y.$$.fragment,p),mn=M(p),C(nn.$$.fragment,p),kn=M(p),C(an.$$.fragment,p),this.h()},h(){tt(a,"class","language-js")},m(p,m){b(n,p,m),r(p,s,m),r(p,a,m),a.innerHTML=e,r(p,t,m),b(o,p,m),r(p,i,m),b(h,p,m),r(p,f,m),b(v,p,m),r(p,W,m),b(D,p,m),r(p,u,m),b(d,p,m),r(p,E,m),b(x,p,m),r(p,O,m),b(T,p,m),r(p,Q,m),b(Z,p,m),r(p,cn,m),b(tn,p,m),r(p,un,m),b(X,p,m),r(p,rn,m),b(sn,p,m),r(p,fn,m),b(Y,p,m),r(p,$n,m),b(en,p,m),r(p,_n,m),b(y,p,m),r(p,mn,m),b(nn,p,m),r(p,kn,m),b(an,p,m),gn=!0},p(p,m){const wn={};m&2&&(wn.$$scope={dirty:m,ctx:p}),n.$set(wn);const Cn={};m&2&&(Cn.$$scope={dirty:m,ctx:p}),o.$set(Cn);const bn={};m&2&&(bn.$$scope={dirty:m,ctx:p}),v.$set(bn);const Pn={};m&2&&(Pn.$$scope={dirty:m,ctx:p}),d.$set(Pn);const En={};m&2&&(En.$$scope={dirty:m,ctx:p}),x.$set(En);const xn={};m&2&&(xn.$$scope={dirty:m,ctx:p}),T.$set(xn);const Wn={};m&2&&(Wn.$$scope={dirty:m,ctx:p}),Z.$set(Wn);const Dn={};m&2&&(Dn.$$scope={dirty:m,ctx:p}),X.$set(Dn);const Sn={};m&2&&(Sn.$$scope={dirty:m,ctx:p}),Y.$set(Sn);const In={};m&2&&(In.$$scope={dirty:m,ctx:p}),y.$set(In);const jn={};m&2&&(jn.$$scope={dirty:m,ctx:p}),nn.$set(jn)},i(p){gn||(k(n.$$.fragment,p),k(o.$$.fragment,p),k(h.$$.fragment,p),k(v.$$.fragment,p),k(D.$$.fragment,p),k(d.$$.fragment,p),k(x.$$.fragment,p),k(T.$$.fragment,p),k(Z.$$.fragment,p),k(tn.$$.fragment,p),k(X.$$.fragment,p),k(sn.$$.fragment,p),k(Y.$$.fragment,p),k(en.$$.fragment,p),k(y.$$.fragment,p),k(nn.$$.fragment,p),k(an.$$.fragment,p),gn=!0)},o(p){g(n.$$.fragment,p),g(o.$$.fragment,p),g(h.$$.fragment,p),g(v.$$.fragment,p),g(D.$$.fragment,p),g(d.$$.fragment,p),g(x.$$.fragment,p),g(T.$$.fragment,p),g(Z.$$.fragment,p),g(tn.$$.fragment,p),g(X.$$.fragment,p),g(sn.$$.fragment,p),g(Y.$$.fragment,p),g(en.$$.fragment,p),g(y.$$.fragment,p),g(nn.$$.fragment,p),g(an.$$.fragment,p),gn=!1},d(p){P(n,p),p&&c(s),p&&c(a),p&&c(t),P(o,p),p&&c(i),P(h,p),p&&c(f),P(v,p),p&&c(W),P(D,p),p&&c(u),P(d,p),p&&c(E),P(x,p),p&&c(O),P(T,p),p&&c(Q),P(Z,p),p&&c(cn),P(tn,p),p&&c(un),P(X,p),p&&c(rn),P(sn,p),p&&c(fn),P(Y,p),p&&c($n),P(en,p),p&&c(_n),P(y,p),p&&c(mn),P(nn,p),p&&c(kn),P(an,p)}}}function Qs(l){let n,s;const a=[l[0],Nn];let e={$$slots:{default:[Ns]},$$scope:{ctx:l}};for(let t=0;t<a.length;t+=1)e=vn(e,a[t]);return n=new st({props:e}),{c(){w(n.$$.fragment)},l(t){C(n.$$.fragment,t)},m(t,o){b(n,t,o),s=!0},p(t,[o]){const i=o&1?nt(a,[o&1&&Ln(t[0]),o&0&&Ln(Nn)]):{};o&2&&(i.$$scope={dirty:o,ctx:t}),n.$set(i)},i(t){s||(k(n.$$.fragment,t),s=!0)},o(t){g(n.$$.fragment,t),s=!1},d(t){P(n,t)}}}const Nn={title:"Attaching events in Svelte",author:"henrikvilhelmberglund",authorlink:"github.com/henrikvilhelmberglund/",date:"2023-02-02T00:00:00.000Z",layout:"notes"};function Us(l,n,s){return l.$$set=a=>{s(0,n=vn(vn({},n),Hn(a)))},n=Hn(n),[n]}class se extends q{constructor(n){super(),F(this,n,Us,Qs,B,{})}}export{se as default,Nn as metadata};
