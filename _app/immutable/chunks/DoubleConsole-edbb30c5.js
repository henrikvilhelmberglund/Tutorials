var E=Object.freeze,K=Object.defineProperty;var j=(e,s)=>E(K(e,"raw",{value:E(s||e.slice())}));import{S as U,i as z,s as F,k as b,q as k,a as T,l as v,m as y,r as f,h as u,c as C,b as i,D,N as B,u as N,B as h,Q as L,w as G,x as I,y as P,f as m,t as d,z as Q,C as V,E as W,F as A,G as J,O as M,e as O,P as R}from"./index-78f54c3b.js";import{E as X}from"./Example-e8e737fa.js";function Y(e){let s,o,t,n,a,c,_,r,$,g,w;return{c(){s=b("button"),o=k("-"),t=T(),n=k(e[0]),a=k(" * 2 = "),c=k(e[1]),_=T(),r=b("button"),$=k("+")},l(p){s=v(p,"BUTTON",{});var l=y(s);o=f(l,"-"),l.forEach(u),t=C(p),n=f(p,e[0]),a=f(p," * 2 = "),c=f(p,e[1]),_=C(p),r=v(p,"BUTTON",{});var x=y(r);$=f(x,"+"),x.forEach(u)},m(p,l){i(p,s,l),D(s,o),i(p,t,l),i(p,n,l),i(p,a,l),i(p,c,l),i(p,_,l),i(p,r,l),D(r,$),g||(w=[B(s,"click",e[3]),B(r,"click",e[2])],g=!0)},p(p,[l]){l&1&&N(n,p[0]),l&2&&N(c,p[1])},i:h,o:h,d(p){p&&u(s),p&&u(t),p&&u(n),p&&u(a),p&&u(c),p&&u(_),p&&u(r),g=!1,L(w)}}}function Z(e,s,o){let t,n=1;function a(){o(0,n++,n)}function c(){o(0,n--,n)}return e.$$.update=()=>{e.$$.dirty&1&&o(1,t=n*2),e.$$.dirty&1&&console.log(n)},[n,t,a,c]}class nn extends U{constructor(s){super(),z(this,s,Z,Y,F,{})}}const sn=e=>({}),S=e=>({slot:"example"}),an=e=>({}),q=e=>({slot:"code"});function tn(e){let s,o;return s=new nn({}),{c(){G(s.$$.fragment)},l(t){I(s.$$.fragment,t)},m(t,n){P(s,t,n),o=!0},i(t){o||(m(s.$$.fragment,t),o=!0)},o(t){d(s.$$.fragment,t),o=!1},d(t){Q(s,t)}}}function en(e){let s;const o=e[0].default,t=V(o,e,e[1],S),n=t||tn();return{c(){n&&n.c()},l(a){n&&n.l(a)},m(a,c){n&&n.m(a,c),s=!0},p(a,c){t&&t.p&&(!s||c&2)&&W(t,o,a,a[1],s?J(o,a[1],c,sn):A(a[1]),S)},i(a){s||(m(n,a),s=!0)},o(a){d(n,a),s=!1},d(a){n&&n.d(a)}}}function on(e){let s,o=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token literal-property property">$</span><span class="token operator">:</span> double <span class="token operator">=</span> count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token literal-property property">$</span><span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>decrement<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token language-javascript"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span> * 2 = <span class="token language-javascript"><span class="token punctuation">{</span>double<span class="token punctuation">}</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>increment<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>`,t;return{c(){s=new M(!1),t=O(),this.h()},l(n){s=R(n,!1),t=O(),this.h()},h(){s.a=t},m(n,a){s.m(o,n,a),i(n,t,a)},p:h,d(n){n&&u(t),n&&s.d()}}}function pn(e){let s;const o=e[0].default,t=V(o,e,e[1],q),n=t||on();return{c(){n&&n.c()},l(a){n&&n.l(a)},m(a,c){n&&n.m(a,c),s=!0},p(a,c){t&&t.p&&(!s||c&2)&&W(t,o,a,a[1],s?J(o,a[1],c,an):A(a[1]),q)},i(a){s||(m(n,a),s=!0)},o(a){d(n,a),s=!1},d(a){n&&n.d(a)}}}var H;function cn(e){let s,o,t;return o=new X({props:{src:String.raw(H||(H=j([`<script>
let count = 1;
$: double = count * 2;
$: console.log(count);
function increment() {
count++;
}
function decrement() {
count--;
}
<\/script>
<button on:click={decrement}>-</button>
{count} * 2 = {double}
<button on:click={increment}>+</button>`]))),meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[pn],example:[en]},$$scope:{ctx:e}}}),{c(){s=b("div"),G(o.$$.fragment)},l(n){s=v(n,"DIV",{});var a=y(s);I(o.$$.fragment,a),a.forEach(u)},m(n,a){i(n,s,a),P(o,s,null),t=!0},p(n,[a]){const c={};a&2&&(c.$$scope={dirty:a,ctx:n}),o.$set(c)},i(n){t||(m(o.$$.fragment,n),t=!0)},o(n){d(o.$$.fragment,n),t=!1},d(n){n&&u(s),Q(o)}}}function ln(e,s,o){let{$$slots:t={},$$scope:n}=s;return e.$$set=a=>{"$$scope"in a&&o(1,n=a.$$scope)},[t,n]}class fn extends U{constructor(s){super(),z(this,s,ln,cn,F,{})}}export{fn as default};
