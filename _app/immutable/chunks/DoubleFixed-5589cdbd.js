var E=Object.freeze,K=Object.defineProperty;var j=(o,s)=>E(K(o,"raw",{value:E(s||o.slice())}));import{S as H,i as U,s as z,k as g,q as f,a as T,l as v,m as y,r as k,h as u,c as D,b as i,D as B,N as F,u as N,B as h,Q as L,w as G,x as I,y as P,f as m,t as d,z as Q,C as V,E as W,F as A,G as J,O as M,e as O,P as R}from"./index-99d2d53b.js";import{E as X}from"./Example-63ebad4c.js";function Y(o){let s,e,a,n,t,l,_,r,$,b,w;return{c(){s=g("button"),e=f("-"),a=T(),n=f(o[0]),t=f(" * 2 = "),l=f(o[1]),_=T(),r=g("button"),$=f("+")},l(p){s=v(p,"BUTTON",{});var c=y(s);e=k(c,"-"),c.forEach(u),a=D(p),n=k(p,o[0]),t=k(p," * 2 = "),l=k(p,o[1]),_=D(p),r=v(p,"BUTTON",{});var x=y(r);$=k(x,"+"),x.forEach(u)},m(p,c){i(p,s,c),B(s,e),i(p,a,c),i(p,n,c),i(p,t,c),i(p,l,c),i(p,_,c),i(p,r,c),B(r,$),b||(w=[F(s,"click",o[3]),F(r,"click",o[2])],b=!0)},p(p,[c]){c&1&&N(n,p[0]),c&2&&N(l,p[1])},i:h,o:h,d(p){p&&u(s),p&&u(a),p&&u(n),p&&u(t),p&&u(l),p&&u(_),p&&u(r),b=!1,L(w)}}}function Z(o,s,e){let a,n=1;function t(){e(0,n++,n)}function l(){e(0,n--,n)}return o.$$.update=()=>{o.$$.dirty&1&&e(1,a=n*2)},[n,a,t,l]}class nn extends H{constructor(s){super(),U(this,s,Z,Y,z,{})}}const sn=o=>({}),S=o=>({slot:"example"}),tn=o=>({}),q=o=>({slot:"code"});function an(o){let s,e;return s=new nn({}),{c(){G(s.$$.fragment)},l(a){I(s.$$.fragment,a)},m(a,n){P(s,a,n),e=!0},i(a){e||(m(s.$$.fragment,a),e=!0)},o(a){d(s.$$.fragment,a),e=!1},d(a){Q(s,a)}}}function en(o){let s;const e=o[0].default,a=V(e,o,o[1],S),n=a||an();return{c(){n&&n.c()},l(t){n&&n.l(t)},m(t,l){n&&n.m(t,l),s=!0},p(t,l){a&&a.p&&(!s||l&2)&&W(a,e,t,t[1],s?J(e,t[1],l,sn):A(t[1]),S)},i(t){s||(m(n,t),s=!0)},o(t){d(n,t),s=!1},d(t){n&&n.d(t)}}}function on(o){let s,e=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token literal-property property">$</span><span class="token operator">:</span> double <span class="token operator">=</span> count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>decrement<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token language-javascript"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span> * 2 = <span class="token language-javascript"><span class="token punctuation">{</span>double<span class="token punctuation">}</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>increment<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>`,a;return{c(){s=new M(!1),a=O(),this.h()},l(n){s=R(n,!1),a=O(),this.h()},h(){s.a=a},m(n,t){s.m(e,n,t),i(n,a,t)},p:h,d(n){n&&u(a),n&&s.d()}}}function pn(o){let s;const e=o[0].default,a=V(e,o,o[1],q),n=a||on();return{c(){n&&n.c()},l(t){n&&n.l(t)},m(t,l){n&&n.m(t,l),s=!0},p(t,l){a&&a.p&&(!s||l&2)&&W(a,e,t,t[1],s?J(e,t[1],l,tn):A(t[1]),q)},i(t){s||(m(n,t),s=!0)},o(t){d(n,t),s=!1},d(t){n&&n.d(t)}}}var C;function ln(o){let s,e,a;return e=new X({props:{src:String.raw(C||(C=j([`<script>
let count = 1;
$: double = count * 2;
function increment() {
count++;
}
function decrement() {
count--;
}
<\/script>
<button on:click={decrement}>-</button>
{count} * 2 = {double}
<button on:click={increment}>+</button>`]))),meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[pn],example:[en]},$$scope:{ctx:o}}}),{c(){s=g("div"),G(e.$$.fragment)},l(n){s=v(n,"DIV",{});var t=y(s);I(e.$$.fragment,t),t.forEach(u)},m(n,t){i(n,s,t),P(e,s,null),a=!0},p(n,[t]){const l={};t&2&&(l.$$scope={dirty:t,ctx:n}),e.$set(l)},i(n){a||(m(e.$$.fragment,n),a=!0)},o(n){d(e.$$.fragment,n),a=!1},d(n){n&&u(s),Q(e)}}}function cn(o,s,e){let{$$slots:a={},$$scope:n}=s;return o.$$set=t=>{"$$scope"in t&&e(1,n=t.$$scope)},[a,n]}class kn extends H{constructor(s){super(),U(this,s,cn,ln,z,{})}}export{kn as default};
