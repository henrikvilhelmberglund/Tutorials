import{S as B,i as G,s as J,M as D,w as u,x as i,y as c,N as K,O,f as _,t as g,z as v,P as R,k as Q,a as x,l as U,m as V,h as f,c as S,n as X,b as m,q as d,r as b}from"./index-58af1356.js";import{M as Y,P as I}from"./mdsvex-layout-notes-a943bafe.js";import ee from"./HelloWorld-da37931d.js";import te from"./DynamicImage-a0bc0331.js";import ne from"./DynamicImageShort-d8a81f44.js";import{S as q}from"./Strong-d8efce91.js";function se(r){let s;return{c(){s=d("Script tags allow you to add logic and data in your components.")},l(n){s=b(n,"Script tags allow you to add logic and data in your components.")},m(n,$){m(n,s,$)},d(n){n&&f(s)}}}function ae(r){let s;return{c(){s=d("inside curly brackets")},l(n){s=b(n,"inside curly brackets")},m(n,$){m(n,s,$)},d(n){n&&f(s)}}}function $e(r){let s,n,$,o;return n=new q({props:{$$slots:{default:[ae]},$$scope:{ctx:r}}}),{c(){s=d("For example we can define a variable in the script tag and then use it in the markup by putting it "),u(n.$$.fragment),$=d(".")},l(e){s=b(e,"For example we can define a variable in the script tag and then use it in the markup by putting it "),i(n.$$.fragment,e),$=b(e,".")},m(e,a){m(e,s,a),c(n,e,a),m(e,$,a),o=!0},p(e,a){const p={};a&2&&(p.$$scope={dirty:a,ctx:e}),n.$set(p)},i(e){o||(_(n.$$.fragment,e),o=!0)},o(e){g(n.$$.fragment,e),o=!1},d(e){e&&f(s),v(n,e),e&&f($)}}}function oe(r){let s;return{c(){s=d("top level")},l(n){s=b(n,"top level")},m(n,$){m(n,s,$)},d(n){n&&f(s)}}}function le(r){let s,n,$,o;return n=new q({props:{$$slots:{default:[oe]},$$scope:{ctx:r}}}),{c(){s=d("Note that these variables need to be defined in the "),u(n.$$.fragment),$=d(" (not in functions).")},l(e){s=b(e,"Note that these variables need to be defined in the "),i(n.$$.fragment,e),$=b(e," (not in functions).")},m(e,a){m(e,s,a),c(n,e,a),m(e,$,a),o=!0},p(e,a){const p={};a&2&&(p.$$scope={dirty:a,ctx:e}),n.$set(p)},i(e){o||(_(n.$$.fragment,e),o=!0)},o(e){g(n.$$.fragment,e),o=!1},d(e){e&&f(s),v(n,e),e&&f($)}}}function re(r){let s;return{c(){s=d("dynamic attributes")},l(n){s=b(n,"dynamic attributes")},m(n,$){m(n,s,$)},d(n){n&&f(s)}}}function fe(r){let s,n,$,o;return n=new q({props:{$$slots:{default:[re]},$$scope:{ctx:r}}}),{c(){s=d("We can also use variables in HTML tags to have "),u(n.$$.fragment),$=d(".")},l(e){s=b(e,"We can also use variables in HTML tags to have "),i(n.$$.fragment,e),$=b(e,".")},m(e,a){m(e,s,a),c(n,e,a),m(e,$,a),o=!0},p(e,a){const p={};a&2&&(p.$$scope={dirty:a,ctx:e}),n.$set(p)},i(e){o||(_(n.$$.fragment,e),o=!0)},o(e){g(n.$$.fragment,e),o=!1},d(e){e&&f(s),v(n,e),e&&f($)}}}function me(r){let s;return{c(){s=d("shorthand")},l(n){s=b(n,"shorthand")},m(n,$){m(n,s,$)},d(n){n&&f(s)}}}function pe(r){let s,n,$,o;return n=new q({props:{$$slots:{default:[me]},$$scope:{ctx:r}}}),{c(){s=d("If the variable and attribute have the same name we can use a "),u(n.$$.fragment),$=d(".")},l(e){s=b(e,"If the variable and attribute have the same name we can use a "),i(n.$$.fragment,e),$=b(e,".")},m(e,a){m(e,s,a),c(n,e,a),m(e,$,a),o=!0},p(e,a){const p={};a&2&&(p.$$scope={dirty:a,ctx:e}),n.$set(p)},i(e){o||(_(n.$$.fragment,e),o=!0)},o(e){g(n.$$.fragment,e),o=!1},d(e){e&&f(s),v(n,e),e&&f($)}}}function ue(r){let s,n=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>`,$,o,e,a,p,y,P,w,T,k,L,M,N,h,W,H,j;return o=new I({props:{$$slots:{default:[se]},$$scope:{ctx:r}}}),a=new I({props:{$$slots:{default:[$e]},$$scope:{ctx:r}}}),y=new ee({}),w=new I({props:{$$slots:{default:[le]},$$scope:{ctx:r}}}),k=new I({props:{$$slots:{default:[fe]},$$scope:{ctx:r}}}),M=new te({}),h=new I({props:{$$slots:{default:[pe]},$$scope:{ctx:r}}}),H=new ne({}),{c(){s=Q("pre"),$=x(),u(o.$$.fragment),e=x(),u(a.$$.fragment),p=x(),u(y.$$.fragment),P=x(),u(w.$$.fragment),T=x(),u(k.$$.fragment),L=x(),u(M.$$.fragment),N=x(),u(h.$$.fragment),W=x(),u(H.$$.fragment),this.h()},l(t){s=U(t,"PRE",{class:!0});var l=V(s);l.forEach(f),$=S(t),i(o.$$.fragment,t),e=S(t),i(a.$$.fragment,t),p=S(t),i(y.$$.fragment,t),P=S(t),i(w.$$.fragment,t),T=S(t),i(k.$$.fragment,t),L=S(t),i(M.$$.fragment,t),N=S(t),i(h.$$.fragment,t),W=S(t),i(H.$$.fragment,t),this.h()},h(){X(s,"class","language-svelte")},m(t,l){m(t,s,l),s.innerHTML=n,m(t,$,l),c(o,t,l),m(t,e,l),c(a,t,l),m(t,p,l),c(y,t,l),m(t,P,l),c(w,t,l),m(t,T,l),c(k,t,l),m(t,L,l),c(M,t,l),m(t,N,l),c(h,t,l),m(t,W,l),c(H,t,l),j=!0},p(t,l){const E={};l&2&&(E.$$scope={dirty:l,ctx:t}),o.$set(E);const F={};l&2&&(F.$$scope={dirty:l,ctx:t}),a.$set(F);const z={};l&2&&(z.$$scope={dirty:l,ctx:t}),w.$set(z);const A={};l&2&&(A.$$scope={dirty:l,ctx:t}),k.$set(A);const C={};l&2&&(C.$$scope={dirty:l,ctx:t}),h.$set(C)},i(t){j||(_(o.$$.fragment,t),_(a.$$.fragment,t),_(y.$$.fragment,t),_(w.$$.fragment,t),_(k.$$.fragment,t),_(M.$$.fragment,t),_(h.$$.fragment,t),_(H.$$.fragment,t),j=!0)},o(t){g(o.$$.fragment,t),g(a.$$.fragment,t),g(y.$$.fragment,t),g(w.$$.fragment,t),g(k.$$.fragment,t),g(M.$$.fragment,t),g(h.$$.fragment,t),g(H.$$.fragment,t),j=!1},d(t){t&&f(s),t&&f($),v(o,t),t&&f(e),v(a,t),t&&f(p),v(y,t),t&&f(P),v(w,t),t&&f(T),v(k,t),t&&f(L),v(M,t),t&&f(N),v(h,t),t&&f(W),v(H,t)}}}function ie(r){let s,n;const $=[r[0],Z];let o={$$slots:{default:[ue]},$$scope:{ctx:r}};for(let e=0;e<$.length;e+=1)o=D(o,$[e]);return s=new Y({props:o}),{c(){u(s.$$.fragment)},l(e){i(s.$$.fragment,e)},m(e,a){c(s,e,a),n=!0},p(e,[a]){const p=a&1?K($,[a&1&&O(e[0]),a&0&&O(Z)]):{};a&2&&(p.$$scope={dirty:a,ctx:e}),s.$set(p)},i(e){n||(_(s.$$.fragment,e),n=!0)},o(e){g(s.$$.fragment,e),n=!1},d(e){v(s,e)}}}const Z={title:"Adding data to your Svelte component",author:"henrikvilhelmberglund",authorlink:"github.com/henrikvilhelmberglund/",date:"2023-01-28T00:00:00.000Z",layout:"notes"};function ce(r,s,n){return r.$$set=$=>{n(0,s=D(D({},s),R($)))},s=R(s),[s]}class ke extends B{constructor(s){super(),G(this,s,ce,ie,J,{})}}export{ke as default,Z as metadata};
