var j=Object.freeze,L=Object.defineProperty;var T=(o,t)=>j(L(o,"raw",{value:j(t||o.slice())}));import{S as z,i as F,s as G,k as v,q as k,a as C,l as h,m as w,r as _,h as u,c as B,b as i,D as N,N as O,u as S,B as x,Q as M,w as I,x as P,y as Q,f as d,t as $,z as V,C as W,E as A,F as J,G as K,O as R,e as q,P as X}from"./index-78f54c3b.js";import{E as Y}from"./Example-e8e737fa.js";function Z(o){let t,e,a,n,s,c=o[0]*2+"",f,m,r,g,b,y;return{c(){t=v("button"),e=k("-"),a=C(),n=k(o[0]),s=k(" * 2 = "),f=k(c),m=C(),r=v("button"),g=k("+")},l(p){t=h(p,"BUTTON",{});var l=w(t);e=_(l,"-"),l.forEach(u),a=B(p),n=_(p,o[0]),s=_(p," * 2 = "),f=_(p,c),m=B(p),r=h(p,"BUTTON",{});var E=w(r);g=_(E,"+"),E.forEach(u)},m(p,l){i(p,t,l),N(t,e),i(p,a,l),i(p,n,l),i(p,s,l),i(p,f,l),i(p,m,l),i(p,r,l),N(r,g),b||(y=[O(t,"click",o[2]),O(r,"click",o[1])],b=!0)},p(p,[l]){l&1&&S(n,p[0]),l&1&&c!==(c=p[0]*2+"")&&S(f,c)},i:x,o:x,d(p){p&&u(t),p&&u(a),p&&u(n),p&&u(s),p&&u(f),p&&u(m),p&&u(r),b=!1,M(y)}}}function nn(o,t,e){let a=1;function n(){e(0,a++,a)}function s(){e(0,a--,a)}return[a,n,s]}class tn extends z{constructor(t){super(),F(this,t,nn,Z,G,{})}}const sn=o=>({}),D=o=>({slot:"example"}),an=o=>({}),H=o=>({slot:"code"});function en(o){let t,e;return t=new tn({}),{c(){I(t.$$.fragment)},l(a){P(t.$$.fragment,a)},m(a,n){Q(t,a,n),e=!0},i(a){e||(d(t.$$.fragment,a),e=!0)},o(a){$(t.$$.fragment,a),e=!1},d(a){V(t,a)}}}function on(o){let t;const e=o[0].default,a=W(e,o,o[1],D),n=a||en();return{c(){n&&n.c()},l(s){n&&n.l(s)},m(s,c){n&&n.m(s,c),t=!0},p(s,c){a&&a.p&&(!t||c&2)&&A(a,e,s,s[1],t?K(e,s[1],c,sn):J(s[1]),D)},i(s){t||(d(n,s),t=!0)},o(s){$(n,s),t=!1},d(s){n&&n.d(s)}}}function pn(o){let t,e=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>decrement<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token language-javascript"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span> * 2 = <span class="token language-javascript"><span class="token punctuation">{</span>count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">}</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>increment<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>`,a;return{c(){t=new R(!1),a=q(),this.h()},l(n){t=X(n,!1),a=q(),this.h()},h(){t.a=a},m(n,s){t.m(e,n,s),i(n,a,s)},p:x,d(n){n&&u(a),n&&t.d()}}}function cn(o){let t;const e=o[0].default,a=W(e,o,o[1],H),n=a||pn();return{c(){n&&n.c()},l(s){n&&n.l(s)},m(s,c){n&&n.m(s,c),t=!0},p(s,c){a&&a.p&&(!t||c&2)&&A(a,e,s,s[1],t?K(e,s[1],c,an):J(s[1]),H)},i(s){t||(d(n,s),t=!0)},o(s){$(n,s),t=!1},d(s){n&&n.d(s)}}}var U;function ln(o){let t,e,a;return e=new Y({props:{src:String.raw(U||(U=T([`<script>
let count = 1;
function increment() {
count++;
}
function decrement() {
count--;
}
<\/script>
<button on:click={decrement}>-</button>
{count} * 2 = {count * 2}
<button on:click={increment}>+</button>`]))),meta:{Wrapper:"/src/lib/Example.svelte",example:!0},$$slots:{code:[cn],example:[on]},$$scope:{ctx:o}}}),{c(){t=v("div"),I(e.$$.fragment)},l(n){t=h(n,"DIV",{});var s=w(t);P(e.$$.fragment,s),s.forEach(u)},m(n,s){i(n,t,s),Q(e,t,null),a=!0},p(n,[s]){const c={};s&2&&(c.$$scope={dirty:s,ctx:n}),e.$set(c)},i(n){a||(d(e.$$.fragment,n),a=!0)},o(n){$(e.$$.fragment,n),a=!1},d(n){n&&u(t),V(e)}}}function un(o,t,e){let{$$slots:a={},$$scope:n}=t;return o.$$set=s=>{"$$scope"in s&&e(1,n=s.$$scope)},[a,n]}class _n extends z{constructor(t){super(),F(this,t,un,ln,G,{})}}export{_n as default};
